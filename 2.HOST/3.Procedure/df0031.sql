CREATE OR REPLACE PROCEDURE df0031 (
   PV_REFCURSOR   IN OUT   PKG_REPORT.REF_CURSOR,
   OPT            IN       VARCHAR2,
   BRID           IN       VARCHAR2,
   CUSTODYCD      IN       VARCHAR2,
   CIACCTNO       IN       VARCHAR2
   )
IS
--
-- PURPOSE: BRIEFLY EXPLAIN THE FUNCTIONALITY OF THE PROCEDURE
--
-- MODIFICATION HISTORY
-- PERSON      DATE    COMMENTS
-- HUNG.LB   24-AUG-10  UPDATED
-- HUNG.LB   09-SEP-10  UPDATED
-- ---------   ------  -------------------------------------------

   V_STROPTION      VARCHAR2 (5);            -- A: ALL; B: BRANCH; S: SUB-BRANCH
   V_STRBRID        VARCHAR2 (4);            -- USED WHEN V_NUMOPTION > 0

   V_STRI_BRID      VARCHAR2 (5);
   V_STRI_TYPE      VARCHAR2 (5);
   V_STRCIACCTNO    VARCHAR2 (20);

   V_STRACCTNO      VARCHAR2 (20);
   V_STRFULLNAME    VARCHAR2 (100);
   V_STRCUSTODYCD   VARCHAR2 (20);
   V_CURRDATE       DATE;

   V_APMT           NUMBER(20,0);
   V_T0_APMT        NUMBER(20,0);
   V_T1_APMT        NUMBER(20,0);
   V_T2_APMT        NUMBER(20,0);
   V_BALANCE        NUMBER(20,0);
   V_DFDEBTAMT      NUMBER(20,0);
   V_ADVANCELINE    NUMBER(20,0);
   V_PAIDAMT        NUMBER(20,0);
   V_BALDEFOVD      NUMBER(20,0);
   V_MBLOCK         NUMBER(20,0);
   V_AAMT           NUMBER(20,0);

CURSOR A --thong tin cua khach hang.
    IS
SELECT MST.AFACCTNO, CF.FULLNAME, CF.CUSTODYCD,
    nvl(ADV.aamt,0) aamt,  -- SO TIEN DA UNG TRUOC.
    (MST.EMKAMT+MST.MBLOCK) PT, --SO TIEN PHONG TOA.
    NVL(ADV.ADVANCEAMOUNT,0) APMT, --SO DU CO THE UNG TRUOC.
    TRUNC (MST.BALANCE)-NVL(AL.SECUREAMT,0)-NVL (AL.ADVAMT, 0) BALANCE,
    MST.DFDEBTAMT, -- SO DU KHOANH NO.
    MST.ODAMT , -- SO DU BAO LANH.
    NVL(ADV.PAIDAMT,0) PAIDAMT, -- SO TIEN PHAI TRA BAN DEAL.
    GREATEST(NVL(ADV.AVLADVANCE,0) + MST.BALANCE - MST.ODAMT- MST.DFDEBTAMT - MST.DFINTDEBTAMT - NVL (AL.ADVAMT, 0)-NVL(AL.SECUREAMT,0) - MST.RAMT,0) BALDEFOVD
FROM CIMAST MST, AFMAST AF, CFMAST CF,
    (
        SELECT AAMT,DEPOAMT AVLADVANCE, ADVAMT ADVANCEAMOUNT,AFACCTNO, PAIDAMT
        FROM V_GETACCOUNTAVLADVANCE WHERE AFACCTNO = V_STRCIACCTNO
    ) ADV ,
    (SELECT * FROM V_GETBUYORDERINFO WHERE AFACCTNO = V_STRCIACCTNO) AL
WHERE AF.ACCTNO = MST.AFACCTNO
    AND AF.CUSTID = CF.CUSTID
    AND MST.ACCTNO = V_STRCIACCTNO
    AND MST.ACCTNO = ADV.AFACCTNO (+)
    AND MST.ACCTNO  = AL.AFACCTNO (+)
    ;


BEGIN
   V_STROPTION := OPT;

   IF V_STROPTION = 'A' THEN     -- TOAN HE THONG
      V_STRBRID := '%';
   ELSIF V_STROPTION = 'B' THEN
      V_STRBRID := SUBSTR(BRID,1,2) || '__' ;
   ELSE
      V_STRBRID := BRID;
   END IF;

   V_STRCIACCTNO  := CIACCTNO;

   select to_date(varvalue,'DD/MM/YYYY') into V_CURRDATE from sysvar where varname like 'CURRDATE' and grname = 'SYSTEM';

SELECT
    sum(case when getduedate(V_CURRDATE, 'B', '000', 3) = cleardate then maxdepoamt else 0 end) T0,
    sum(case when getduedate(V_CURRDATE, 'B', '000', 2) = cleardate then maxdepoamt else 0 end) T1,
    sum(case when getduedate(V_CURRDATE, 'B', '000', 1) = cleardate then maxdepoamt else 0 end) T2
    into V_T0_APMT, V_T1_APMT, V_T2_APMT
FROM v_dayadvanceschedule
WHERE afacctno = V_STRCIACCTNO
;

OPEN A;
FETCH A INTO V_STRACCTNO, V_STRFULLNAME, V_STRCUSTODYCD, V_AAMT, V_MBLOCK, V_APMT,
        V_BALANCE, V_DFDEBTAMT, V_ADVANCELINE, V_PAIDAMT, V_BALDEFOVD;
IF A%NOTFOUND THEN
     V_STRACCTNO := '';
     V_STRFULLNAME := '';
     V_STRCUSTODYCD := '';
     V_AAMT := 0;
     V_MBLOCK := 0;
     V_APMT := 0;
     V_BALANCE := 0;
     V_DFDEBTAMT := 0;
     V_ADVANCELINE := 0;
     V_PAIDAMT := 0;
     V_BALDEFOVD := 0;
END IF;

OPEN PV_REFCURSOR
    FOR
SELECT V_STRACCTNO AFACCTNO, V_STRFULLNAME FULLNAME, V_STRCUSTODYCD CUSTODYCD,
    V_APMT APMT, V_BALANCE BALANCE, V_DFDEBTAMT DFDEBTAMT, V_ADVANCELINE ADVANCELINE,
    V_PAIDAMT PAIDAMT, V_BALDEFOVD BALDEFOVD, V_AAMT AAMT, V_MBLOCK MBLOCK,
    nvl(V_T0_APMT,0) T0_APMT, nvl(V_T1_APMT,0) T1_APMT, nvl(V_T2_APMT,0) T2_APMT,
    (CASE WHEN (DF.BASICPRICE <= DF.TRIGGERPRICE OR DF.FLAGTRIGGER = 'T') THEN 1
        WHEN LNS.OVERDUEDATE < (SELECT TO_DATE(VARVALUE,'DD/MM/YYYY')
            FROM SYSVAR WHERE GRNAME='SYSTEM' AND VARNAME='CURRDATE') THEN 2
        WHEN LNS.OVERDUEDATE = (SELECT TO_DATE(VARVALUE,'DD/MM/YYYY')
            FROM SYSVAR WHERE GRNAME='SYSTEM' AND VARNAME='CURRDATE') THEN 3
        ELSE 0 END) STATUS,
    DF.ACCTNO, DF.RLSDATE, DF.TRIGGERPRICE, LNS.OVERDUEDATE, DF.REMAINQTTY, DF.SECURED_MATCH, DF.RLSQTTY,
    DF.AMT, DF.RLSAMT, DF.DEALFEERATE,
    GREATEST(ROUND((TO_NUMBER(NVL(SY.VARVALUE,0)) *
                            ((DF.REMAINQTTY + DF.RLSQTTY - DF.SECURED_MATCH)
                                / (DF.REMAINQTTY + DF.RLSQTTY) * DF.AMT - DF.RLSAMT
                            )
                            * (1 + DF.DEALFEERATE / 100))),0) DEALPAIDAMT
FROM V_GETDEALINFO DF, LNSCHD LNS, LNMAST LNM, SYSVAR SY
WHERE DF.LNACCTNO = LNM.ACCTNO
    AND SY.GRNAME='SYSTEM'
    AND SY.VARNAME='HOSTATUS'
    AND DF.AUTOPAID ='Y'
    AND DF.REMAINQTTY + DF.RLSQTTY > 0
    AND LNM.ACCTNO = LNS.ACCTNO
    AND LNS.REFTYPE IN ('P')
    AND (LNS.OVERDUEDATE <= (SELECT TO_DATE(VARVALUE,'DD/MM/YYYY') FROM SYSVAR WHERE GRNAME='SYSTEM' AND VARNAME='CURRDATE')
          OR DF.PRINOVD + DF.OPRINOVD > 0
          OR (DF.BASICPRICE <= DF.TRIGGERPRICE OR DF.FLAGTRIGGER = 'T'))
    AND DF.AFACCTNO = V_STRCIACCTNO
UNION ALL
SELECT V_STRACCTNO AFACCTNO, V_STRFULLNAME FULLNAME, V_STRCUSTODYCD CUSTODYCD,
    V_APMT APMT, V_BALANCE BALANCE, V_DFDEBTAMT DFDEBTAMT, V_ADVANCELINE ADVANCELINE,
    V_PAIDAMT PAIDAMT, V_BALDEFOVD BALDEFOVD, V_AAMT AAMT, V_MBLOCK MBLOCK,
    nvl(V_T0_APMT,0) T0_APMT, nvl(V_T1_APMT,0) T1_APMT, nvl(V_T2_APMT,0) T2_APMT,
    0 STATUS, NULL ACCTNO, NULL RLSDATE, 0 TRIGGERPRICE, NULL OVERDUEDATE,
    0 REMAINQTTY, 0 SECURED_MATCH, 0 RLSQTTY, 0 AMT, 0 RLSAMT, 0 DEALFEERATE, 0 dealpaidamt
FROM DUAL
;

EXCEPTION
   WHEN OTHERS
   THEN
      RETURN;
END;                                                              -- PROCEDURE
/

