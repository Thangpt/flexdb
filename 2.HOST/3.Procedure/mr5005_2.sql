CREATE OR REPLACE PROCEDURE mr5005_2 (
    PV_REFCURSOR            IN OUT   PKG_REPORT.REF_CURSOR,
    OPT                     IN       VARCHAR2,
    BRID                    IN       VARCHAR2,
    I_DATE                  IN       VARCHAR2,
    PV_CUSTODYCD            IN       VARCHAR2,
    CUSTODYCD               IN       VARCHAR2,
    RRATE                   IN       VARCHAR2,
    P_BANKNAME              IN       VARCHAR2
  )
IS
    CUR                         PKG_REPORT.REF_CURSOR;
    V_STROPTION                 VARCHAR2 (5);            -- A: ALL; B: BRANCH; S: SUB-BRANCH
    V_STRBRID                   VARCHAR2 (30);            -- USED WHEN V_NUMOPTION > 0
    V_BRID                      VARCHAR2 (4);
    V_I_DATE                    DATE;
    V_CURRDATE                  DATE;
    V_PVCUSTODYCD               VARCHAR(20);
    V_CUSTODYCD                 VARCHAR(20);
    V_RRATE                     VARCHAR(20);
    L_BANKNAME                  VARCHAR(20);
    V_STRBANKNAME               VARCHAR(100);
BEGIN

    V_STROPTION              := OPT;
    V_BRID:= BRID;
    L_BANKNAME:=P_BANKNAME; -- ALL, KBSV, CF.SHORTNAME

    IF V_STROPTION = 'A' THEN
        V_STRBRID    := '%';
    ELSIF V_STROPTION = 'B' THEN
        V_STRBRID    := SUBSTR(BRID,1,2) || '__' ;
    ELSE
        V_STRBRID    :=BRID;
    END IF;

    IF L_BANKNAME = 'ALL' THEN
        V_STRBANKNAME:= '';
    ELSIF L_BANKNAME = 'KBSV' THEN
        V_STRBANKNAME := 'KBSV';
    ELSE
        SELECT NVL(FULLNAME, SHORTNAME) INTO V_STRBANKNAME FROM CFMAST WHERE CUSTID = L_BANKNAME;
    END IF;


    IF  V_STROPTION = 'A' AND BRID = '0001' THEN
        V_STRBRID := '%';
    ELSIF V_STROPTION = 'B' THEN
       SELECT BR.MAPID INTO V_STRBRID FROM BRGRP BR WHERE BR.BRID = V_BRID;
    ELSE
        V_STROPTION := BRID;
    END IF;

    IF PV_CUSTODYCD = 'ALL' THEN
        V_PVCUSTODYCD:= '%';
    ELSE
        V_PVCUSTODYCD:= PV_CUSTODYCD;
    END IF;

    IF CUSTODYCD = 'ALL' THEN
        V_CUSTODYCD:= '%';
    ELSE
        V_CUSTODYCD:= CUSTODYCD;
    END IF;

    V_RRATE := RRATE;

    SELECT MAX(SBDATE) INTO V_I_DATE FROM SBCLDR WHERE SBDATE <= TO_DATE(I_DATE, SYSTEMNUMS.C_DATE_FORMAT)  AND HOLIDAY ='N';

    SELECT TO_DATE(VARVALUE, SYSTEMNUMS.C_DATE_FORMAT)
    INTO   V_CURRDATE
    FROM   SYSVAR
    WHERE  GRNAME = 'SYSTEM' AND VARNAME = 'CURRDATE';

IF V_I_DATE = V_CURRDATE THEN
OPEN PV_REFCURSOR
FOR
    SELECT CF.FULLNAME, C.FULLNAME MG_NAME, CF.IDCODE, MR.RRTYPE, MR.CUSTBANK,BR.BRID, BR.BRNAME,
        MR.CUSTODYCD, MR.AFACCTNO,MR.PRIN_DRAWNDOWN_T0, MR.PRIN_DRAWNDOWN_MARGIN, MR.PRIN_MOVE_MARGIN,
        MR.PRIN_MOVE_T0, MR.INT_MOVE_MARGIN, MR.INT_MOVE_T0,
        MR.MRPRINAMT + MR.T0PRINAMT + MR.PRIN_MOVE_T0 + MR.PRIN_MOVE_MARGIN - MR.PRIN_DRAWNDOWN_MARGIN - MR.PRIN_DRAWNDOWN_T0  PRINAMT_DAUKY,
        MR.MRPRINAMT,MR.T0PRINAMT, MR.SETOTALCALLASS, MR.T0INTAMT,MR.MRINTAMT, MR.MARGINRATE, MR.MRMRATE,
        MR.MRLRATE, MR.AMT2IRATE, MR.AMT2MRATE, MR.MARGINRATE_MR, MR.MRPRINAMT+MR.T0PRINAMT+MR.T0INTAMT+MR.MRINTAMT AMT, V_I_DATE V_I_DATE
    FROM BRGRP BR, CFMAST CF,
        (
            SELECT TO_DATE(GETCURRDATE,'DD/MM/RRRR') TXDATE ,'IN_DAY' LOG_ACTION,CUSTODYCD,ACTYPE,ACCTNO AFACCTNO,
                RRTYPE, CUSTBANK, MARGINRATE, GREATEST(RTNAMT2 - ASSSELLAMT, T0OVDAMOUNT + OVDAMOUNT + CIDEPOFEEACR - TOTALVND - REALSELLAMT) RTNREMAINAMT, RTNAMT2 AMT2IRATE, RTNAMT AMT2MRATE,
                T0OVDAMOUNT, OVDAMOUNT,CIDEPOFEEACR,TOTALVND, GREATEST(T0OVDAMOUNT + OVDAMOUNT + CIDEPOFEEACR - TOTALVND,RTNAMT2) ADDVND,
                REALSELLAMT, ASSSELLAMT, MRIRATE, MRMRATE, MRLRATE ,RTNAMOUNTREF , OVDAMOUNTREF,
                SELLLOSTASSREF, SELLAMOUNTREF,NOVDAMT,TRFBUYEXT,ADDVNDT2,SETOTALCALLASS,
                MRPRINAMT, T0PRINAMT, MRINTAMT, T0INTAMT,
                PRIN_MOVE_MARGIN,PRIN_MOVE_T0, INT_MOVE_MARGIN,INT_MOVE_T0, PRIN_DRAWNDOWN_MARGIN,PRIN_DRAWNDOWN_T0, MARGINRATE_MR
            FROM
            (

                SELECT AF.GROUPLEADER, AF.ACTYPE, DECODE(ISMARGINACC,'Y','YES','NO') ISMARGINACC,
                    CUSTODYCD,AF.ACCTNO, AF.TRFBUYEXT,
                    NVL(SEC.RLSMARGINRATE,0) RLSMARGINRATE, NVL(SEC.MARGINRATE,0) MARGINRATE,CI.CIDEPOFEEACR,
                    ROUND(GREATEST(ROUND((CASE WHEN NVL(SEC.MARGINRATE,0) * AF.MRMRATE =0 THEN - SEC.OUTSTANDING ELSE
                    GREATEST( 0,- SEC.OUTSTANDING - SEC.NAVACCOUNT *100/AF.MRMRATE) END),0),0),0) RTNAMT,
                    ROUND(GREATEST(ROUND((CASE WHEN NVL(SEC.MARGINRATE,0) * AF.MRIRATE =0 THEN - SEC.OUTSTANDING ELSE
                    GREATEST( 0,- SEC.OUTSTANDING - SEC.NAVACCOUNT *100/AF.MRIRATE) END),0),0),0) RTNAMT2, --- SO TIEN NOP THEM DE VE R AN TOAN
                    ROUND(GREATEST(ROUND((CASE WHEN NVL(SEC.MARGINRATE,0) * AF.MRMRATE =0 THEN - SEC.OUTSTANDING ELSE
                    GREATEST( 0,- (SEC.OUTSTANDING +DEPOFEEAMT) - SEC.NAVACCOUNT *100/AF.MRMRATE) END),0),GREATEST(OVAMT - BALANCE - NVL(AVLADVANCE,0),0)),0) ADDVND,
                    ROUND(GREATEST(ROUND((CASE WHEN NVL(SEC.MARGINRATE,0) * AF.MRIRATE =0 THEN - SEC.OUTSTANDING ELSE
                    GREATEST( 0,- (SEC.OUTSTANDING +DEPOFEEAMT) - SEC.NAVACCOUNT *100/AF.MRIRATE) END),0),GREATEST(OVAMT - BALANCE - NVL(AVLADVANCE,0),0)),0) ADDVND2, -- SO TIEN NOP THEM VE RAN TOAN VA TRA HET NO QUA HAN
                    GREATEST(OVAMT+DEPOFEEAMT - BALANCE - NVL(AVLADVANCE,0),0) NOVDAMT, -- SO TIEN CAN NOP THEM DE TRA HET NO QUA HAN
                    ROUND(GREATEST(ROUND((CASE WHEN NVL(SEC.RLSMARGINRATE,0) * AF.MRMRATE =0 THEN - OUTSTANDINGT2 ELSE
                    GREATEST( 0,- OUTSTANDINGT2 - SEC.NAVACCOUNTT2*100/AF.MRMRATE) END),0),0),0) RTNAMTT2,
                    ROUND(GREATEST(ROUND((CASE WHEN NVL(SEC.RLSMARGINRATE,0) * AF.MRMRATE =0 THEN - OUTSTANDINGT2 ELSE
                    GREATEST( 0,- (OUTSTANDINGT2+ROUND(DEPOFEEAMT)) - SEC.NAVACCOUNTT2*100/AF.MRMRATE) END),0),GREATEST(OVAMT - BALANCE - ROUND(NVL(AVLADVANCE,0)),0)),0) ADDVNDT2,
                    ROUND(GREATEST(ROUND((CASE WHEN NVL(SEC.RLSMARGINRATE,0) * AF.MRMRATE =0 THEN - SEC.OUTSTANDINGT2 ELSE
                    GREATEST( 0,- (SEC.OUTSTANDINGT2+ROUND(DEPOFEEAMT)) - SEC.NAVACCOUNTT2 *100/AF.MRMRATE) END),0),GREATEST(ROUND(OVAMT) - BALANCE - NVL(AVLADVANCE,0) - NVL(LOSTASS,0),0))  - NVL(OD.SELLAMOUNT,0),0) RTNREMAINAMT,
                    ROUND(GREATEST(ROUND((CASE WHEN NVL(SEC.RLSMARGINRATE,0) * AF.MRIRATE =0 THEN - SEC.OUTSTANDINGT2 ELSE
                    GREATEST( 0,- (SEC.OUTSTANDINGT2+ROUND(DEPOFEEAMT)) - SEC.NAVACCOUNTT2 *100/AF.MRIRATE) END),0),GREATEST(ROUND(OVAMT) - BALANCE - NVL(AVLADVANCE,0) - NVL(LOSTASS,0),0))  - NVL(OD.SELLAMOUNT,0),0) RTNREMAINAMT2, -- SO TIEN CON PHAI XU LY VE RANTOAN VA TRA HET NO QUA HAN

                    AF.MRIRATE, AF.MRMRATE, AF.MRLRATE, CI.BALANCE + NVL(AVLADVANCE,0) TOTALVND, NVL(T0.ADVANCELINE,0) ADVANCELINE, NVL(SEC.SEMAXTOTALCALLASS,0) SETOTALCALLASS,NVL(SEC.SEMAXCALLASS,0) SEMAXCALLASS, AF.MRCRLIMIT,
                    AF.MRCRLIMITMAX, CI.DFODAMT,AF.MRCRLIMITMAX - CI.DFODAMT MRCRLIMITREMAIN, AF.STATUS, NVL(LN.MARGINOVDAMT,0) OVDAMOUNT,ROUND(NVL(LN.T0AMT,0)) T0OVDAMOUNT,
                    ROUND(CI.ODAMT) + ROUND(NVL(TRFBUYAMT_OVER,0)) TOTALODAMT, ROUND(CI.TRFBUYAMT) TRFBUYAMT, ROUND(NVL(OD.SELLAMOUNT,0),0) RMAMT,
                    NVL(SEC.OUTSTANDING,0) OUTSTANDING, NVL(SEC.OUTSTANDINGT2,0) OUTSTANDINGT2,

                    ROUND(GREATEST(ROUND((CASE WHEN NVL(SEC.RLSMARGINRATE,0) * AF.MRMRATE =0 THEN - SEC.OUTSTANDINGT2 ELSE
                    GREATEST( 0,- SEC.OUTSTANDINGT2 - SEC.NAVACCOUNTT2 *100/AF.MRMRATE) END),0),0),0) RTNAMOUNTREF,
                    ROUND(GREATEST(OVAMT+DEPOFEEAMT - BALANCE - NVL(AVLADVANCE,0),0),0) OVDAMOUNTREF,
                    ROUND(NVL(LOSTASS,0),0) SELLLOSTASSREF,
                    ROUND(NVL(OD.SELLAMOUNT,0),0) SELLAMOUNTREF,
                    ROUND(NVL(REALSELLAMT,0),0) REALSELLAMT,
                    ROUND(NVL(REALSELLAMT,0),0) - ROUND(NVL(LOSTASS,0),0) ASSSELLAMT,
                    NVL(LN.MRPRINAMT,0) MRPRINAMT,  NVL(LN.T0PRINAMT,0) T0PRINAMT, NVL(LN.MRINTAMT,0) MRINTAMT, NVL(LN.T0INTAMT,0) T0INTAMT,
                    NVL(PRIN_DRAWNDOWN_MARGIN,0) PRIN_DRAWNDOWN_MARGIN, NVL(PRIN_DRAWNDOWN_T0,0) PRIN_DRAWNDOWN_T0,
                    NVL(PRIN_MOVE_MARGIN,0) PRIN_MOVE_MARGIN, NVL(PRIN_MOVE_T0,0) PRIN_MOVE_T0,
                    NVL(INT_MOVE_MARGIN + PRFEE_MOVE_MARGIN,0) INT_MOVE_MARGIN,
                    NVL(INT_MOVE_T0 + PRFEE_MOVE_T0,0) INT_MOVE_T0, LN.RRTYPE, LN.CUSTBANK,
                    NVL(SEC.MARGINRATE_MR,0) MARGINRATE_MR
                FROM CFMAST CF, AFMAST AF, CIMAST CI, AFTYPE AFT, V_GETSECMARGINRATIO_ALL SEC,
                (
                    SELECT ACCTNO, 'Y' ISMARGINACC FROM AFMAST AF
                    WHERE EXISTS (SELECT 1 FROM AFTYPE AFT, LNTYPE LNT WHERE AFT.ACTYPE = AF.ACTYPE AND AFT.LNTYPE = LNT.ACTYPE AND LNT.CHKSYSCTRL = 'Y'
                UNION ALL
                    SELECT 1 FROM AFIDTYPE AFI, LNTYPE LNT WHERE AFI.AFTYPE = AF.ACTYPE AND AFI.OBJNAME = 'LN.LNTYPE' AND AFI.ACTYPE = LNT.ACTYPE AND LNT.CHKSYSCTRL = 'Y')
                    GROUP BY ACCTNO
                ) ISMR,
                (SELECT AFTYPE, 'Y' CO_FINANCING FROM AFIDTYPE WHERE OBJNAME = 'LN.LNTYPE' GROUP BY AFTYPE) COF,
                (
                    SELECT TRFACCTNO, RRTYPE, NVL(CUSTBANK,'') CUSTBANK,
                        SUM (MRPRINAMT) MRPRINAMT, SUM (T0PRINAMT) T0PRINAMT, SUM (MRINTAMT) MRINTAMT, SUM (T0INTAMT) T0INTAMT, SUM (MARGINAMT) MARGINAMT,
                        SUM (MARGINOVDAMT) MARGINOVDAMT, SUM (T0AMT) T0AMT, SUM (T0OVDAMT) T0OVDAMT,
                        SUM (PRIN_DRAWNDOWN_MARGIN) PRIN_DRAWNDOWN_MARGIN, SUM (PRIN_DRAWNDOWN_T0) PRIN_DRAWNDOWN_T0, SUM (PRIN_MOVE_MARGIN) PRIN_MOVE_MARGIN,
                        SUM (PRIN_MOVE_T0) PRIN_MOVE_T0, SUM (INT_MOVE_MARGIN) INT_MOVE_MARGIN,
                        SUM (INT_MOVE_T0) INT_MOVE_T0, SUM (PRFEE_MOVE_T0) PRFEE_MOVE_T0, SUM (PRFEE_MOVE_MARGIN) PRFEE_MOVE_MARGIN

                    FROM
                    (
                        SELECT TRFACCTNO, LNT.RRTYPE, NVL(LNT.CUSTBANK,'') CUSTBANK,
                            TRUNC((ROUND(PRINNML)+ROUND(PRINOVD)),0)  MRPRINAMT,
                            TRUNC((ROUND(OPRINNML)+ROUND(OPRINOVD)),0)  T0PRINAMT,
                            TRUNC((ROUND(INTNMLACR)+ROUND(INTDUE)+ROUND(INTOVDACR)+ROUND(INTNMLOVD)+ROUND(FEEINTNMLACR)+ROUND(FEEINTDUE)+ROUND(FEEINTOVDACR)+ROUND(FEEINTNMLOVD)),0) MRINTAMT,
                            TRUNC((ROUND(OINTNMLACR)+ROUND(OINTDUE)+ROUND(OINTOVDACR)+ROUND(OINTNMLOVD)),0) T0INTAMT,
                            TRUNC((ROUND(PRINNML)+ROUND(PRINOVD)+ROUND(INTNMLACR)+ROUND(INTDUE)+ROUND(INTOVDACR)+ROUND(INTNMLOVD)+ROUND(FEEINTNMLACR)+ROUND(FEEINTDUE)+ROUND(FEEINTOVDACR)+ROUND(FEEINTNMLOVD)),0) MARGINAMT,
                            TRUNC((ROUND(PRINOVD)+ROUND(INTOVDACR)+ROUND(INTNMLOVD)+ROUND(FEEINTOVDACR)+ROUND(FEEINTNMLOVD)),0) MARGINOVDAMT,
                            TRUNC((ROUND(OPRINNML)+ROUND(OPRINOVD)+ROUND(OINTNMLACR)+ROUND(OINTDUE)+ROUND(OINTOVDACR)+ROUND(OINTNMLOVD)),0) T0AMT,
                            TRUNC((ROUND(OPRINOVD)+ROUND(OINTOVDACR)+ROUND(OINTNMLOVD)),0) T0OVDAMT,
                            ABS(TRUNC(SUM(NVL(PRIN_DRAWNDOWN_MARGIN,0)),0)) PRIN_DRAWNDOWN_MARGIN,
                            ABS(TRUNC(SUM(NVL(PRIN_DRAWNDOWN_T0,0)),0)) PRIN_DRAWNDOWN_T0,
                            ABS(TRUNC(SUM(NVL(PRIN_MOVE_MARGIN,0)),0)) PRIN_MOVE_MARGIN,
                            ABS(TRUNC(SUM(NVL(PRIN_MOVE_T0,0)),0)) PRIN_MOVE_T0,
                            ABS(TRUNC(SUM(NVL(INT_MOVE_MARGIN,0)),0)) INT_MOVE_MARGIN,
                            ABS(TRUNC(SUM(NVL(INT_MOVE_T0,0)),0)) INT_MOVE_T0,
                            ABS(TRUNC(SUM(NVL(PRFEE_MOVE_T0,0)),0)) PRFEE_MOVE_T0,
                            ABS(TRUNC(SUM(NVL(PRFEE_MOVE_MARGIN,0)),0)) PRFEE_MOVE_MARGIN
                        FROM VW_LNMAST_ALL LN,
                        (SELECT ACCTNO, AUTOID, REFTYPE FROM VW_LNSCHD_ALL) LS,
                        (
                            SELECT AUTOID,SUM(CASE WHEN NML < 0 THEN 0 ELSE
                                CASE WHEN REFTYPE IN ('P') THEN NML ELSE 0 END
                                END ) PRIN_DRAWNDOWN_MARGIN,
                                SUM(CASE WHEN NML < 0 THEN 0 ELSE
                                CASE WHEN REFTYPE IN ('GP') THEN NML ELSE 0 END
                                END ) PRIN_DRAWNDOWN_T0,
                                SUM(CASE WHEN REFTYPE IN ('P') THEN (CASE WHEN NML > 0 THEN 0 ELSE NML END  +OVD) ELSE 0 END) PRIN_MOVE_MARGIN,
                                SUM(CASE WHEN REFTYPE IN ('GP') THEN (CASE WHEN NML > 0 THEN 0 ELSE NML END  +OVD) ELSE 0 END) PRIN_MOVE_T0,
                                SUM(CASE WHEN REFTYPE IN ('P') THEN INTPAID ELSE 0 END) INT_MOVE_MARGIN,
                                SUM(CASE WHEN REFTYPE IN ('GP') THEN INTPAID ELSE 0 END) INT_MOVE_T0,
                                SUM(CASE WHEN REFTYPE IN ('P') THEN FEEPAID ELSE 0 END) PRFEE_MOVE_MARGIN,
                                SUM(CASE WHEN REFTYPE IN ('GP') THEN FEEPAID ELSE 0 END) PRFEE_MOVE_T0
                            FROM
                            (
                                SELECT A.*, B.REFTYPE FROM VW_LNSCHDLOG_ALL A, VW_LNSCHD_ALL B
                                WHERE A.AUTOID = B.AUTOID (+)
                            ) LNSLOG
                            WHERE NVL(DELTD,'N') <>'Y' AND TXDATE =  GETCURRDATE
                            GROUP BY AUTOID
                        ) LNTR, LNTYPE LNT
                        WHERE FTYPE = 'AF'
                            AND LN.ACTYPE = LNT.ACTYPE
                            AND LS.ACCTNO = LN.ACCTNO (+)
                            AND LS.AUTOID = LNTR.AUTOID(+)
                        GROUP BY TRFACCTNO, LNT.RRTYPE, LNT.CUSTBANK,TRUNC((ROUND(PRINNML)+ROUND(PRINOVD)),0),
                            TRUNC((ROUND(OPRINNML)+ROUND(OPRINOVD)),0)  ,
                            TRUNC((ROUND(INTNMLACR)+ROUND(INTDUE)+ROUND(INTOVDACR)+ROUND(INTNMLOVD)+ROUND(FEEINTNMLACR)+ROUND(FEEINTDUE)+ROUND(FEEINTOVDACR)+ROUND(FEEINTNMLOVD)),0) ,
                            TRUNC((ROUND(OINTNMLACR)+ROUND(OINTDUE)+ROUND(OINTOVDACR)+ROUND(OINTNMLOVD)),0) ,
                            TRUNC((ROUND(PRINNML)+ROUND(PRINOVD)+ROUND(INTNMLACR)+ROUND(INTDUE)+ROUND(INTOVDACR)+ROUND(INTNMLOVD)+ROUND(FEEINTNMLACR)+ROUND(FEEINTDUE)+ROUND(FEEINTOVDACR)+ROUND(FEEINTNMLOVD)),0) ,
                            TRUNC((ROUND(PRINOVD)+ROUND(INTOVDACR)+ROUND(INTNMLOVD)+ROUND(FEEINTOVDACR)+ROUND(FEEINTNMLOVD)),0) ,
                            TRUNC((ROUND(OPRINNML)+ROUND(OPRINOVD)+ROUND(OINTNMLACR)+ROUND(OINTDUE)+ROUND(OINTOVDACR)+ROUND(OINTNMLOVD)),0) ,
                            TRUNC((ROUND(OPRINOVD)+ROUND(OINTOVDACR)+ROUND(OINTNMLOVD)),0)
                    ) A GROUP BY TRFACCTNO, RRTYPE, CUSTBANK
                ) LN,
                (SELECT ACCTNO, SUM(ACCLIMIT) ADVANCELINE FROM USERAFLIMIT WHERE TYPERECEIVE = 'T0' GROUP BY ACCTNO) T0,
                (
                    SELECT OD.AFACCTNO,
                        ROUND(SUM(OD.REMAINQTTY*OD.QUOTEPRICE*(1-ODT.DEFFEERATE/100-TO_NUMBER(SY.VARVALUE)/100)*(1-NVL(RSK.ADVRATE,ADT.ADVRATE/100)*3/360)),0) REALSELLAMT, --- SO TIEN BAN TRU PHI, THUE, UTTB
                        ROUND(SUM(OD.REMAINQTTY*OD.QUOTEPRICE),0) ASSSELLAMT, --- SO TIEN BAN CHUA TRU PHI, THUE, UTTB
                        ROUND(GREATEST(SUM(OD.REMAINQTTY*OD.QUOTEPRICE*(1-ODT.DEFFEERATE/100-TO_NUMBER(SY.VARVALUE)/100)*(1-NVL(RSK.ADVRATE,ADT.ADVRATE/100)*3/360) - OD.REMAINQTTY*LEAST(NVL(RSK.MRPRICELOAN,0),MARGINPRICE)*NVL(RSK.MRRATIORATE,0)/(CASE WHEN NVL(RSK.MRMRATE,100) = 0 THEN 100 ELSE NVL(RSK.MRMRATE,100) END) ),0)) SELLAMOUNT,
                        ROUND(GREATEST(SUM(OD.REMAINQTTY*LEAST(NVL(RSK.MRPRICERATE,0),MARGINCALLPRICE)*NVL(RSK.MRRATIORATE,0)/(CASE WHEN NVL(RSK.MRIRATE,100) = 0 THEN 100 ELSE NVL(RSK.MRIRATE,100) END) ),0)) LOSTASS
                    FROM ODMAST OD, ODTYPE ODT,AFMAST AF, AFTYPE AFT, ADTYPE ADT,
                    (
                        SELECT AF.ACCTNO, AF.MRMRATE,AF.MRIRATE, NVL(ADT.ADVRATE,0)/100 ADVRATE, RSK.*
                        FROM AFMAST AF, AFSERISK RSK, AFTYPE AFT, ADTYPE ADT
                        WHERE AF.ACTYPE = RSK.ACTYPE(+)
                            AND AF.ACTYPE = AFT.ACTYPE AND AFT.ADTYPE = ADT.ACTYPE
                    ) RSK,
                    SECURITIES_INFO SEC,
                    SYSVAR SY
                    WHERE OD.EXECTYPE IN ('NS','MS') AND ISDISPOSAL = 'Y'
                        AND OD.AFACCTNO = AF.ACCTNO AND AF.ACTYPE = AFT.ACTYPE AND AFT.ADTYPE = ADT.ACTYPE
                        AND OD.AFACCTNO = RSK.ACCTNO(+) AND OD.CODEID = RSK.CODEID(+)
                        AND OD.CODEID = SEC.CODEID
                        AND OD.ACTYPE = ODT.ACTYPE
                        AND SY.VARNAME = 'ADVSELLDUTY'
                        AND OD.REMAINQTTY > 0
                    GROUP BY AFACCTNO
                ) OD
            WHERE CF.CUSTID = AF.CUSTID
                AND CF.CUSTATCOM = 'Y'
                AND AF.ACTYPE = AFT.ACTYPE
                AND AF.ACCTNO = CI.ACCTNO
                AND AF.ACCTNO = SEC.AFACCTNO
                AND AF.ACCTNO = LN.TRFACCTNO
                AND AF.ACCTNO = ISMR.ACCTNO(+)
                AND AF.ACTYPE = COF.AFTYPE(+)
                AND AF.ACCTNO = T0.ACCTNO(+)
                AND AF.ACCTNO = OD.AFACCTNO(+)
            ORDER BY CF.CUSTODYCD, AF.ACCTNO,  LN.RRTYPE, LN.CUSTBANK
            )
        ) MR
    LEFT JOIN
        (
            SELECT MAX(CF.CUSTID) CUSTID, MAX(CF.FULLNAME) FULLNAME, MAX(REA.AFACCTNO) AFACCTNO
            FROM REAFLNK REA, RETYPE RET, CFMAST  CF
            WHERE SUBSTR(REA.REACCTNO,11,4) = RET.ACTYPE AND RET.REROLE IN ('BM','RM')
                AND SUBSTR(REA.REACCTNO,1,10) =  CF.CUSTID (+)
                AND CF.CUSTID LIKE V_PVCUSTODYCD
                AND REA.STATUS <> 'C'
            GROUP BY CF.CUSTID, CF.FULLNAME, REA.AFACCTNO
        ) C ON MR.AFACCTNO = C.AFACCTNO
    WHERE  MR.TXDATE = V_I_DATE AND CF.CUSTODYCD = MR.CUSTODYCD AND CF.CUSTODYCD LIKE V_CUSTODYCD
        AND ((V_RRATE = 'ALL' AND MR.MARGINRATE >= 0)
            OR ((V_RRATE = 'MRATE') AND (MR.MARGINRATE > MR.MRLRATE) AND (MR.MARGINRATE <= MR.MRMRATE))
            OR  ( V_RRATE = 'LRATE' AND MR.MARGINRATE <= MR.MRLRATE ))
        AND CASE WHEN L_BANKNAME = 'ALL' THEN 1
                WHEN L_BANKNAME = 'KBSV' AND MR.RRTYPE = 'C' THEN 1
                WHEN L_BANKNAME <> 'KBSV' AND MR.RRTYPE = 'B' AND L_BANKNAME LIKE MR.CUSTBANK THEN 1
            ELSE 0 END = 1
        AND BR.BRID = SUBSTR(MR.AFACCTNO,1,4)
        AND (MR.MRPRINAMT + MR.T0PRINAMT + MR.PRIN_MOVE_T0 + MR.PRIN_MOVE_MARGIN - MR.PRIN_DRAWNDOWN_MARGIN - MR.PRIN_DRAWNDOWN_T0 >0
            OR  MR.PRIN_DRAWNDOWN_MARGIN + MR.PRIN_MOVE_MARGIN  + MR.INT_MOVE_MARGIN +  MR.PRIN_DRAWNDOWN_T0  + MR.PRIN_MOVE_T0 + MR.INT_MOVE_T0 > 0)
        AND (CF.BRID LIKE V_STRBRID OR INSTR(V_STRBRID,CF.BRID) <> 0)
        AND NVL(C.CUSTID,' ') LIKE V_PVCUSTODYCD
    ORDER BY MR.CUSTODYCD, MR.AFACCTNO, RRTYPE, MR.CUSTBANK

;
ELSE
OPEN PV_REFCURSOR
FOR
    SELECT CF.FULLNAME, C.FULLNAME MG_NAME, CF.IDCODE, MR.RRTYPE, MR.CUSTBANK, BR.BRID, BR.BRNAME,
        MR.CUSTODYCD, MR.AFACCTNO,MR.PRIN_DRAWNDOWN_T0, MR.PRIN_DRAWNDOWN_MARGIN, MR.PRIN_MOVE_MARGIN,
        MR.PRIN_MOVE_T0, MR.INT_MOVE_MARGIN, MR.INT_MOVE_T0,
        MR.MRPRINAMT + MR.T0PRINAMT + MR.PRIN_MOVE_T0 + MR.PRIN_MOVE_MARGIN - MR.PRIN_DRAWNDOWN_MARGIN - MR.PRIN_DRAWNDOWN_T0 PRINAMT_DAUKY,
        MR.MRPRINAMT, MR.T0PRINAMT, MR.SETOTALCALLASS, MR.T0INTAMT, MR.MRINTAMT, MR.MARGINRATE, MR.MRMRATE,
        MR.MRLRATE, MR.AMT2IRATE, MR.AMT2MRATE, MR.MARGINRATE_MR, MR.MRPRINAMT + MR.T0PRINAMT + MR.T0INTAMT + MR.MRINTAMT AMT, V_I_DATE V_I_DATE
    FROM BRGRP BR, CFMAST CF, MR5005_LOG MR
    LEFT JOIN
        (
            SELECT MAX(CF.CUSTID) CUSTID, MAX(CF.FULLNAME) FULLNAME, MAX(REA.AFACCTNO) AFACCTNO
            FROM REAFLNK REA, RETYPE RET, CFMAST  CF
            WHERE SUBSTR(REA.REACCTNO,11,4) = RET.ACTYPE AND RET.REROLE IN ('BM','RM')
                AND SUBSTR(REA.REACCTNO,1,10) =  CF.CUSTID (+)
                AND CF.CUSTID LIKE V_PVCUSTODYCD
                AND REA.STATUS <> 'C'
            GROUP BY CF.CUSTID, CF.FULLNAME, REA.AFACCTNO
        ) C ON MR.AFACCTNO = C.AFACCTNO
    WHERE  MR.TXDATE = V_I_DATE AND CF.CUSTODYCD = MR.CUSTODYCD AND CF.CUSTODYCD LIKE V_CUSTODYCD
        AND ((V_RRATE = 'ALL' AND MR.MARGINRATE >= 0)
            OR ((V_RRATE = 'MRATE') AND (MR.MARGINRATE > MR.MRLRATE) AND (MR.MARGINRATE <= MR.MRMRATE))
            OR  ( V_RRATE = 'LRATE' AND MR.MARGINRATE <= MR.MRLRATE ))
        AND CASE WHEN L_BANKNAME = 'ALL' THEN 1
                WHEN L_BANKNAME = 'KBSV' AND MR.RRTYPE = 'C' THEN 1
                WHEN L_BANKNAME <> 'KBSV' AND MR.RRTYPE = 'B' AND L_BANKNAME LIKE MR.CUSTBANK THEN 1
            ELSE 0 END = 1
        AND BR.BRID = SUBSTR(MR.AFACCTNO,1,4)
        AND (MR.MRPRINAMT + MR.T0PRINAMT + MR.PRIN_MOVE_T0 + MR.PRIN_MOVE_MARGIN - MR.PRIN_DRAWNDOWN_MARGIN - MR.PRIN_DRAWNDOWN_T0 >0
            OR  MR.PRIN_DRAWNDOWN_MARGIN + MR.PRIN_MOVE_MARGIN  + MR.INT_MOVE_MARGIN +  MR.PRIN_DRAWNDOWN_T0  + MR.PRIN_MOVE_T0 + MR.INT_MOVE_T0 > 0)
        AND (CF.BRID LIKE V_STRBRID OR INSTR(V_STRBRID,CF.BRID) <> 0)
        AND NVL(C.CUSTID,' ') LIKE V_PVCUSTODYCD
    ORDER BY MR.CUSTODYCD, MR.AFACCTNO, RRTYPE, MR.CUSTBANK

;
END IF;

EXCEPTION
  WHEN OTHERS
   THEN
      RETURN;
END;
/

