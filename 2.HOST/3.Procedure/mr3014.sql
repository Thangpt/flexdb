CREATE OR REPLACE PROCEDURE mr3014 (
       PV_REFCURSOR   IN OUT   PKG_REPORT.REF_CURSOR,
       OPT            IN       VARCHAR2,
       BRID           IN       VARCHAR2,
       I_DATE         IN       VARCHAR2,
       PV_SYMBOL       IN       VARCHAR2,
       PV_TRADEPLACE   IN       VARCHAR2,
       PV_PLSENT       IN       VARCHAR2
)
IS

-- PURPOSE:
-- BANG TONG HOP CK LAM TAI SAN DAM BAO
-- PERSON               DATE                COMMENTS
-- ---------------      ----------          ----------------------
-- THANHNM               02/07/2012          TAO MOI
-- ---------------      ----------          ----------------------

  V_STROPTION           VARCHAR2 (5);       -- A: ALL; B: BRANCH; S: SUB-BRANCH
  V_STRBRID             VARCHAR2 (4);

  V_IN_DATE             DATE;
  V_TRADEPLACE          VARCHAR2 (100);
  V_SYMBOL              VARCHAR2 (100);
  V_PLSENT              VARCHAR2 (100);
  V_CURRDATE            VARCHAR2(10);

BEGIN

    V_STROPTION := OPT;

    IF (V_STROPTION <> 'A') AND (BRID <> 'ALL')
    THEN
         V_STRBRID := BRID;
    ELSE
         V_STRBRID := '%%';
    END IF;

    V_IN_DATE := TO_DATE(I_DATE, SYSTEMNUMS.C_DATE_FORMAT);

    IF (PV_TRADEPLACE <> 'ALL' OR PV_TRADEPLACE <> '' OR PV_TRADEPLACE <> NULL) THEN
       V_TRADEPLACE  :=    PV_TRADEPLACE;
    ELSE
       V_TRADEPLACE  :=    '%';
    END IF;

    IF (PV_SYMBOL <> 'ALL' OR PV_SYMBOL <> '' OR PV_SYMBOL <> NULL) THEN
       V_SYMBOL  :=    PV_SYMBOL;
    ELSE
       V_SYMBOL  :=    '%';
    END IF;

    V_PLSENT     := UPPER(PV_PLSENT);

    SELECT VARVALUE  INTO
    V_CURRDATE FROM SYSVAR WHERE VARNAME LIKE 'CURRDATE' AND GRNAME = 'SYSTEM';

IF (V_PLSENT = 'UBCK') THEN

   OPEN PV_REFCURSOR
   FOR
   --TUAN THU
     SELECT * FROM (
     SELECT  AL.CDCONTENT  TRADEPLACE, SB.SYMBOL, RM.ROOMLIMIT PRLIMIT, NVL(AFPR.PRINUSED,0) PRINUSED, SB.LISTINGQTTY
        FROM
            ( SELECT SE.CODEID, LEAST(SE.ROOMLIMIT,SE.ROOMLIMITMAX) ROOMLIMIT,
                SE.SYROOMLIMIT, SE.SYROOMUSED
                FROM  (SELECT * FROM  (
                                        SELECT SYMBOL, CODEID, ROOMLIMIT,ROOMLIMITMAX,SYROOMUSED,SYROOMLIMIT, TO_DATE(V_CURRDATE,'DD/MM/YYYY')  HISTDATE FROM SECURITIES_INFO
                                        UNION ALL
                                        SELECT SYMBOL, CODEID, ROOMLIMIT,ROOMLIMITMAX,SYROOMUSED,SYROOMLIMIT,HISTDATE  FROM SECURITIES_INFO_HIST
                                        ) WHERE HISTDATE = (select nvl(min(histdate),TO_DATE(V_CURRDATE,'DD/MM/YYYY')) from SECURITIES_INFO_HIST where histdate >= V_IN_DATE )) SE) RM,
             (SELECT * FROM (
                    SELECT SYMBOL, CODEID, LISTINGQTTY, TO_DATE(V_CURRDATE,'DD/MM/YYYY')  HISTDATE FROM SECURITIES_INFO
                    UNION ALL
                    SELECT SYMBOL, CODEID, LISTINGQTTY,HISTDATE  FROM SECURITIES_INFO_HIST)
                WHERE HISTDATE = (select nvl(min(histdate),TO_DATE(V_CURRDATE,'DD/MM/YYYY')) from SECURITIES_INFO_HIST where histdate >= V_IN_DATE)) SB,
              SBSECURITIES SYM,
             (SELECT CODEID, SUM(PRINUSED) PRINUSED
             FROM
                    (SELECT "AUTOID","AFACCTNO","PRINUSED","CODEID","ALLOCTYP","ORGORDERID","TXDATE","TXNUM","RESTYPE" FROM AFPRALLOC
                    UNION ALL
                    SELECT "AUTOID","AFACCTNO","PRINUSED","CODEID","ALLOCTYP","ORGORDERID","TXDATE","TXNUM","RESTYPE" FROM AFPRALLOCHIST)
                WHERE RESTYPE = 'M' AND TXDATE <= V_IN_DATE  GROUP BY CODEID ) AFPR,
             (SELECT  CDCONTENT, CDVAL FROM ALLCODE WHERE CDNAME ='TRADEPLACE' AND CDTYPE='SE') AL

        WHERE RM.CODEID = AFPR.CODEID(+) AND RM.CODEID = SB.CODEID  AND SB.CODEID= SYM.CODEID
        AND SYM.TRADEPLACE = AL.CDVAL
        AND SYM.TRADEPLACE LIKE V_TRADEPLACE
        AND SB.SYMBOL LIKE V_SYMBOL
        ) WHERE PRLIMIT <>0 OR PRINUSED <> 0
   ;

ELSE

   OPEN PV_REFCURSOR
   FOR
     ---KHONG TUAN THU
     SELECT * FROM (
     SELECT  AL.CDCONTENT  TRADEPLACE,SB.SYMBOL,
     RM.SYROOMLIMIT PRLIMIT, NVL(AFPR.PRINUSED,0) + SB.SYROOMUSED PRINUSED, SB.LISTINGQTTY
        FROM (SELECT SE.CODEID, LEAST(SE.ROOMLIMIT,SE.ROOMLIMITMAX) ROOMLIMIT,
            SE.SYROOMLIMIT, SE.SYROOMUSED
            FROM
                 (SELECT * FROM  (
                                        SELECT SYMBOL, CODEID, ROOMLIMIT,ROOMLIMITMAX,SYROOMUSED,SYROOMLIMIT, TO_DATE(V_CURRDATE,'DD/MM/YYYY')  HISTDATE FROM SECURITIES_INFO
                                        UNION ALL
                                        SELECT SYMBOL, CODEID, ROOMLIMIT,ROOMLIMITMAX,SYROOMUSED,SYROOMLIMIT,HISTDATE  FROM SECURITIES_INFO_HIST
                                        ) WHERE HISTDATE = (select nvl(min(histdate),TO_DATE(V_CURRDATE,'DD/MM/YYYY')) from SECURITIES_INFO_HIST where histdate >= V_IN_DATE) ) SE) RM,

          (SELECT * FROM (
             SELECT SYMBOL, CODEID, LISTINGQTTY,SYROOMUSED, TO_DATE(V_CURRDATE,'DD/MM/YYYY')  HISTDATE FROM SECURITIES_INFO
                UNION ALL
                SELECT SYMBOL, CODEID, LISTINGQTTY,SYROOMUSED,HISTDATE  FROM SECURITIES_INFO_HIST)
          WHERE HISTDATE = (select nvl(min(histdate),TO_DATE(V_CURRDATE,'DD/MM/YYYY')) from SECURITIES_INFO_HIST where histdate >= V_IN_DATE)) SB,

         SBSECURITIES SBS,
       (SELECT CODEID, SUM(PRINUSED) PRINUSED FROM
            (SELECT "AUTOID","AFACCTNO","PRINUSED","CODEID","ALLOCTYP","ORGORDERID","TXDATE","TXNUM","RESTYPE" FROM AFPRALLOC
                UNION ALL
                SELECT "AUTOID","AFACCTNO","PRINUSED","CODEID","ALLOCTYP","ORGORDERID","TXDATE","TXNUM","RESTYPE" FROM AFPRALLOCHIST)
       WHERE RESTYPE = 'S' AND  TXDATE <= V_IN_DATE  GROUP BY CODEID) AFPR,
         (SELECT  CDCONTENT, CDVAL FROM ALLCODE WHERE CDNAME ='TRADEPLACE' AND CDTYPE='SE') AL
        WHERE RM.CODEID = AFPR.CODEID(+) AND RM.CODEID = SB.CODEID
        AND RM.CODEID = SBS.CODEID AND SBS.TRADEPLACE NOT IN ('006','005','003')
        AND SBS.TRADEPLACE = AL.CDVAL
        AND SBS.TRADEPLACE LIKE V_TRADEPLACE
        AND SB.SYMBOL LIKE V_SYMBOL ) WHERE PRLIMIT <>0 OR PRINUSED <> 0
   ;

END IF;

EXCEPTION
   WHEN OTHERS THEN
      RETURN;
END;
/

