CREATE OR REPLACE PACKAGE pks_convert_flex is

  -- Author  : NAMNT
  -- Created : 29/02/2012 4:55:43 PM
  -- Purpose : Lay thong tin cho email, sms template

  PROCEDURE BEGIN_Convert;
  procedure Convert_CFMAST;
  procedure Convert_CIMAST;
  procedure Convert_SEMAST;
  procedure Convert_ODMAST;
  procedure Convert_ADSCHD;
  procedure Convert_CIINTTRAN;
  PROCEDURE Convert_CFOTHERACC;
  PROCEDURE Convert_LNMAST;
  PROCEDURE Convert_USERLOGIN;
  PROCEDURE Convert_pool_room;
  PROCEDURE END_Convert;
  procedure Convert_DEPO;

end pks_convert_flex;
/

CREATE OR REPLACE PACKAGE BODY pks_convert_flex is
  pkgctx plog.log_ctx;
  logrow tlogdebug%rowtype;



procedure BEGIN_Convert is
v_currdate varchar2(50);
v_prevdate varchar2(50);
v_nextdate varchar2(50);

BEGIN
  plog.error(pkgctx, 'BEGIN_Convert');
-- UPDATE SYSVAR-----------------------------------------------------------
v_currdate:='15/04/2013';
v_prevdate:='12/04/2013';
v_nextdate:='16/04/2013';

delete  from sysvar where VARNAME in ('CURRDATE','PREVDATE','BUSDATE','NEXTDATE');

INSERT INTO sysvar
(GRNAME,VARNAME,VARVALUE,VARDESC,EN_VARDESC)
VALUES
('SYSTEM','CURRDATE',v_currdate,'Current working date',NULL);

INSERT INTO sysvar
(GRNAME,VARNAME,VARVALUE,VARDESC,EN_VARDESC)
VALUES
('SYSTEM','PREVDATE',v_prevdate,'Previous working date',NULL);

INSERT INTO sysvar
(GRNAME,VARNAME,VARVALUE,VARDESC,EN_VARDESC)
VALUES
('SYSTEM','BUSDATE',v_currdate,'Current business date',NULL);

INSERT INTO sysvar
(GRNAME,VARNAME,VARVALUE,VARDESC,EN_VARDESC)
VALUES
('SYSTEM','NEXTDATE',v_nextdate,'Next working date',NULL);

COMMIT;

UPDATE CIMASTCV SET BALANCE = REPLACE(BALANCE,',','');
UPDATE SEMASTCV SET trade = REPLACE(trade,',',''),standing = REPLACE(standing,',','')
,waitfortrade = REPLACE(waitfortrade,',',''),blocked = REPLACE(blocked,',',''),
mortage = REPLACE(mortage,',',''),blockw = REPLACE(blockw,',','');
UPDATE STSCHDCV SET matchprice = REPLACE(matchprice,',',''),matchqtty = REPLACE(matchqtty,',','')
,feeacr = REPLACE(feeacr,',','');
UPDATE ADSCHDCV SET amt = REPLACE(amt,',',''),fee = REPLACE(fee,',','');
UPDATE CRINTACRCV SET crintacr = REPLACE(crintacr,',','');
UPDATE MAGINCV SET intnmlacr = REPLACE(NVL(intnmlacr,0),',',''),nml = REPLACE(NVL(nml,0),',',''),intovdacr = REPLACE(NVL(intovdacr,0),',','') ;
--UPDATE MAGINCV SET intnmlacr = REPLACE(NVL(intnmlacr,0),',',''),nml = REPLACE(NVL(nml,0),',','');
UPDATE AFMASTCV SET ACTYPE ='0003' WHERE ACTYPE IS NULL ;
UPDATE  smscv SET mobilesms = REPLACE (REPLACE(REPLACE (mobilesms,',',''),'.',''),' ','') ;
DELETE FROM AFMASTCV WHERE CUSTODYCD IS NULL ;
DELETE FROM CFMASTCV WHERE CUSTODYCD IS NULL ;
DELETE FROM AFMASTmCV WHERE CUSTODYCD IS NULL ;
UPDATE depointacrcv  SET DEPOINTACR = REPLACE(DEPOINTACR,',','');
UPDATE depofeeamtcv  SET DEPOFEEAMT = REPLACE(DEPOFEEAMT,',','');

  --BO GIAO DICH CONVERT DU LIEU
delete from tltx where tltxcd in ('9100','9101','9102','9103');
--9100 : Nop tien giao dich  vao tai khoan
insert into tltx (TLTXCD, TXDESC, EN_TXDESC, LIMIT, OFFLINEALLOW, IBT, OVRRQD, LATE, OVRLEV, PRN, LOCAL, CHAIN, DIRECT, HOSTACNO, BACKUP, TXTYPE, NOSUBMIT, DELALLOW, FEEAPP, MSQRQR, VOUCHER, MNEM, MSG_AMT, MSG_ACCT, WITHACCT, ACCTENTRY, BGCOLOR, DISPLAY, BKDATE, ADJALLOW, GLGP, VOUCHERID, CCYCD, RUNMOD)
values ('9100', 'Nop tien giao dich', 'Nop tien giao dich', 0, 'Y', 'Y', 'Y', '0', 2, 'Y', 'N', 'N', 'Y', ' ', 'Y', 'T', '2', 'N', 'N', 'N', 'CI01', 'CICDP', '10', '03', ' ', '', 0, 'Y', 'N', 'Y', 'N', '', '##', 'NET');
--9101 : Nop tien phong toa  vao tai khoan
insert into tltx (TLTXCD, TXDESC, EN_TXDESC, LIMIT, OFFLINEALLOW, IBT, OVRRQD, LATE, OVRLEV, PRN, LOCAL, CHAIN, DIRECT, HOSTACNO, BACKUP, TXTYPE, NOSUBMIT, DELALLOW, FEEAPP, MSQRQR, VOUCHER, MNEM, MSG_AMT, MSG_ACCT, WITHACCT, ACCTENTRY, BGCOLOR, DISPLAY, BKDATE, ADJALLOW, GLGP, VOUCHERID, CCYCD, RUNMOD)
values ('9101', 'Nop tien phong toa', 'Nop tien phong toa', 0, 'Y', 'Y', 'Y', '0', 2, 'Y', 'N', 'N', 'Y', ' ', 'Y', 'T', '2', 'N', 'N', 'N', 'CI01', 'CICDP', '10', '03', ' ', '', 0, 'Y', 'N', 'Y', 'N', '', '##', 'NET');
--9102 : Nop chung khoan giao dich vao tai khoan
insert into tltx (TLTXCD, TXDESC, EN_TXDESC, LIMIT, OFFLINEALLOW, IBT, OVRRQD, LATE, OVRLEV, PRN, LOCAL, CHAIN, DIRECT, HOSTACNO, BACKUP, TXTYPE, NOSUBMIT, DELALLOW, FEEAPP, MSQRQR, VOUCHER, MNEM, MSG_AMT, MSG_ACCT, WITHACCT, ACCTENTRY, BGCOLOR, DISPLAY, BKDATE, ADJALLOW, GLGP, VOUCHERID, CCYCD, RUNMOD)
values ('9102', 'Nop chung khoan giao dich', 'Nop chung khoan giao dich( BOSC)', 0, 'Y', 'Y', 'Y', '0', 2, 'Y', 'N', 'Y', 'Y', ' ', 'Y', 'M', '2', 'Y', 'N', 'N', 'SE01', 'SETRFSE', '10', '05', ' ', '', 0, 'Y', 'Y', 'Y', 'N', '', '##', 'NET');
--9103 : Nop chung khoan phong toa vao tai khoan
insert into tltx (TLTXCD, TXDESC, EN_TXDESC, LIMIT, OFFLINEALLOW, IBT, OVRRQD, LATE, OVRLEV, PRN, LOCAL, CHAIN, DIRECT, HOSTACNO, BACKUP, TXTYPE, NOSUBMIT, DELALLOW, FEEAPP, MSQRQR, VOUCHER, MNEM, MSG_AMT, MSG_ACCT, WITHACCT, ACCTENTRY, BGCOLOR, DISPLAY, BKDATE, ADJALLOW, GLGP, VOUCHERID, CCYCD, RUNMOD)
values ('9103', 'Nop chung khoan phong toa', 'Nop chung khoan phong toa( BOSC)', 0, 'Y', 'Y', 'Y', '0', 2, 'Y', 'N', 'Y', 'Y', ' ', 'Y', 'M', '2', 'Y', 'N', 'N', 'SE01', 'SETRFSE', '10', '05', ' ', '', 0, 'Y', 'Y', 'Y', 'N', '', '##', 'NET');


begin
pr_gen_sbcurrdate;
end;

update securities_info set tradebuysell='Y';
COMMIT;

  plog.error(pkgctx, 'BEGIN_Convert');
  exception
    when others then
      plog.error(pkgctx, sqlerrm);
      plog.setEndSection(pkgctx, 'END BEGIN_Convert');
  end;


procedure Convert_CFMAST is

v_currdate date;
v_prevdate date;
v_nextdate date;

begin
plog.error(pkgctx, 'Begin Convert_CFMAST');

select to_date(varvalue,'DD/MM/RRRR') into v_currdate from sysvar where grname ='SYSTEM' and varname ='CURRDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_prevdate from sysvar where grname ='SYSTEM' and varname ='PREVDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_nextdate from sysvar where grname ='SYSTEM' and varname ='NEXTDATE';

plog.error(pkgctx, 'Convert_CFMAST'||'Khach hang ca nhan');

FOR REC IN
(--SELECT trim (CF.brid)||SUBSTR(cf.custodycd,5)  CUSTID ,trim(af.STATUS)STATUS
SELECT trim (CF.brid)||'92'||LPAD(seq_CONVERT.NEXTVAL,4,'0')   CUSTID ,trim(af.STATUS)STATUS
, '' SHORTNAME ,   cf.fullname FULLNAME ,SUBSTR( cf.fullname,  INSTR( cf.fullname ,' ',-1,1 ))  MNEMONIC
,to_date( case when cf.DATEOFBIRTH is null then '01/01/2000' else cf.DATEOFBIRTH end ,'dd/mm/yyyy') DATEOFBIRTH, DECODE(CF.CTMTYPE,'001','001','005') IDTYPE, cf.IDCODE ,to_date( case when cf.IDDATE is null then '01/01/2000' else cf.IDDATE end ,'dd/mm/yyyy') IDDATE,  cf.IDPLACE
,  cf.ADDRESS ADDRESS1 , nvl(cf.PHONE,'-----') PHONE ,cf.mobilecall MOBILE,
 cf.FAX ,cf.EMAIL   ,  '234' COUNTRY, cf.CUSTODYCD ,to_date( case when cf.opendate is null then '01/01/2000' else cf.opendate end ,'dd/mm/yyyy')  OPNDATE ,CF.custodycd DESCRIPTION,
DECODE(CF.CTMTYPE,'002','003',trim(cf.SEX)) SEX ,  decode(trim(CF.CTMTYPE),'001','I','B') CUSTTYPE,trim(af.actype) actype,trim(CF.CTMTYPE) AFTYPE,PIN,trim(AF.ISONLINE) TRADEONLINE , NVL(province,'--') province,trim(CF.BRID) BRID,trim(AF.COREBANK)COREBANK,
'---'  bankname, CASE WHEN AF.COREBANK='Y' THEN bankacctno ELSE '' END  bankacctno,TRIM(CF.ISDEPO) ISDEPO,CF.PHONE1,CF.ADDRESS1 ADDRESS_CONT,'001' TERMOFUSE,
 DECODE (SUBSTR(CF.custodycd,4,1),'F',SUBSTR(CF.custodycd,5),'' ) tradingcode
FROM CFMASTCV cf, afmastcv af
WHERE cf.custodycd = af.custodycd  and  SUBSTR(cf.custodycd,1,4)='091C'
and instr('0123456789', SUBSTR(cf.custodycd,5,1))>0
)
LOOP


INSERT INTO CFMAST
(CUSTID,SHORTNAME,FULLNAME ,MNEMONIC , DATEOFBIRTH,IDTYPE,IDCODE,IDDATE,IDPLACE,IDEXPIRED,ADDRESS,PHONE,MOBILE  ,FAX,EMAIL,COUNTRY,PROVINCE , POSTCODE,RESIDENT,CLASS,GRINVESTOR,INVESTRANGE,TIMETOJOIN,CUSTODYCD,STAFF,COMPANYID,POSITION,SEX,SECTOR,BUSINESSTYPE,INVESTTYPE,EXPERIENCETYPE,INCOMERANGE,ASSETRANGE,FOCUSTYPE,BRID,CAREBY,APPROVEID,LASTDATE,AUDITORID,AUDITDATE,MARGINLIMIT,TRADELIMIT,ADVANCELIMIT,REPOLIMIT,DEPOSITLIMIT,MORTAGERATE,LANGUAGE,BANKACCTNO,BANKCODE,VALUDADDED,ISSUERID,DESCRIPTION,MARRIED,REFNAME,PHONE1,FAX1,TAXCODE,INTERNATION,OCCUPATION,EDUCATION,CUSTTYPE,STATUS,PSTATUS,INVESTMENTEXPERIENCE,PCUSTODYCD,EXPERIENCECD,ORGINF,TLID,ISBANKING,PIN,  USERNAME, MRLOANLIMIT, RISKLEVEL, EXPDATE, VALDATE, TRADINGCODE, TRADINGCODEDT, LAST_CHANGE, OPNDATE, CONTRACTCHK,CFCLSDATE,MARGINALLOW,CUSTATCOM,LNLIMITMAX,CFLNLIMITMAX,UPDATELIMITMAX,T0LOANLIMIT,DMSTS,ACTIVEDATE,AFSTATUS,MOBILESMS,OPENVIA)
VALUES
( REC.CUSTID ,REC.SHORTNAME ,REC.FULLNAME  ,NULL ,REC.DATEOFBIRTH ,'001',REC.IDCODE,REC.IDDATE,REC.IDPLACE ,TO_DATE('01/01/2020','DD/MM/YYYY'),REC.ADDRESS1,REC.PHONE,REC.MOBILE  ,REC.FAX,REC.EMAIL,rec.COUNTRY,REC.province ,   NULL,'002','001','001','001','001',REC.CUSTODYCD,'005',NULL,'001',REC.SEX,'001','009','004','002','001','001','001',REC.BRID,'0001',NULL,v_prevdate,NULL,NULL,0,0,0,0,0,0,'001',NULL,'000',NULL,NULL,REC.DESCRIPTION,'002',NULL,NULL,NULL,NULL,NULL,'001','002',REC.CUSTTYPE,rec.status,'P',NULL,NULL,'10000',NULL,NULL,'N',REC.PIN,NULL, 0.0000, 'M', null, null, REC.tradingcode, NULL, '', REC.OPNDATE, 'Y',NULL,'Y',REC.ISDEPO,NULL,NULL,NULL,0,'N',NULL,'N',NULL,'F');

INSERT INTO afmast (ACTYPE,CUSTID,ACCTNO,AFTYPE,TRADEFLOOR,TRADETELEPHONE,TRADEONLINE,PIN,LANGUAGE,TRADEPHONE,ALLOWDEBIT,BANKACCTNO,BANKNAME,SWIFTCODE,RECEIVEVIA,EMAIL,ADDRESS,FAX,CIACCTNO,IFRULECD,LASTDATE,STATUS,PSTATUS,MARGINLINE,TRADELINE,ADVANCELINE,REPOLINE,DEPOSITLINE,BRATIO,TERMOFUSE,DESCRIPTION,ICCFCD,ICCFTIED,TELELIMIT,ONLINELIMIT,CFTELELIMIT,CFONLINELIMIT,TRADERATE,DEPORATE,MISCRATE,FAX1,PHONE1,STMCYCLE,ISOTC,CONSULTANT,PISOTC,OPNDATE,FEEBASE,BANKACCTNOBLOCK,COREBANK,VIA,DMATCHAMT,MRIRATE,MRMRATE,MRLRATE,MRDUEDAY,MREXTDAY,MRCLAMT,MRCRLIMIT,MRCRLIMITMAX,GROUPLEADER,T0AMT,ETS,BRID,LAST_CHANGE,CLSDATE,CAREBY,AUTOADV,TLID,T0INTRATE,T0ACCTNAV,MRIRATIO,MRMRATIO,MRLRATIO,TRFBUYEXT,TRFBUYRATE,DEPOLASTDT,BRKFEETYPE,TRIGGERDATE)
VALUES(rec.actype,REC.CUSTID,REC.CUSTID,REC.AFTYPE,'Y','Y',REC.TRADEONLINE,NULL,'001',NULL,'Y',rec.BANKACCTNO,rec.BANKNAME,NULL,'E',REC.EMAIL,REC.ADDRESS1,NULL,REC.CUSTID,'001',TO_DATE('12/28/2011','MM/DD/RRRR'),REC.STATUS,'PPAPA',0,0,0,0,0,0,REC.TERMOFUSE,REC.DESCRIPTION,NULL,'Y',0,0,0,0,0,0,0,REC.FAX,REC.PHONE,'M','N','N','N',REC.OPNDATE,0,NULL,REC.COREBANK,'F',0,0,0,0,0,0,0,0,0,NULL,0,'N',REC.BRID,SYSDATE,NULL,'0006','N',NULL,0,0,0,0,0,0,100,NULL,'AF',NULL);


INSERT INTO CIMAST (ACTYPE,ACCTNO,CCYCD,AFACCTNO,CUSTID,OPNDATE,CLSDATE,LASTDATE,DORMDATE,STATUS,PSTATUS,BALANCE,CRAMT,DRAMT,CRINTACR,CRINTDT,ODINTACR,ODINTDT,AVRBAL,MDEBIT,MCREDIT,AAMT,RAMT,BAMT,EMKAMT,MMARGINBAL,MARGINBAL,ICCFCD,ICCFTIED,ODLIMIT,ADINTACR,ADINTDT,FACRTRADE,FACRDEPOSITORY,FACRMISC,MINBAL,ODAMT,NAMT,FLOATAMT,HOLDBALANCE,PENDINGHOLD,PENDINGUNHOLD,COREBANK,RECEIVING,NETTING,MBLOCK,OVAMT,DUEAMT,T0ODAMT,MBALANCE,MCRINTDT,TRFAMT,LAST_CHANGE,DFODAMT,DFDEBTAMT,DFINTDEBTAMT,CIDEPOFEEACR,TRFBUYAMT,INTFLOATAMT,FEEFLOATAMT,DEPOLASTDT,DEPOFEEAMT)
VALUES('0003',REC.CUSTID,'00',REC.CUSTID,REC.CUSTID,REC.OPNDATE,NULL,NULL,NULL,REC.STATUS,'P',0,0,0,0,REC.OPNDATE,0,REC.OPNDATE,0,0,0,0,0,0,0,0,0,NULL,'Y',0,0,NULL,0,0,0,0,0,0,0,0,0,0,REC.COREBANK,0,0,0,0,0,0,0,null,0,SYSDATE,0,0,0,0,0,0,0,NULL,0);


END LOOP;
COMMIT;

-- KHACH HANG TO CHUC
plog.error(pkgctx, 'Convert_CFMAST'||'Khach hang to chuc');

FOR REC IN
(
SELECT trim (CF.brid)||'92'||LPAD(seq_CONVERT.NEXTVAL,4,'0')  CUSTID    ,trim(af.STATUS)STATUS
, '' SHORTNAME ,   cf.fullname FULLNAME ,SUBSTR( cf.fullname,  INSTR( cf.fullname ,' ',-1,1 ))  MNEMONIC
,to_DATE( case when cf.DATEOFBIRTH is null then '01/01/2000' else cf.DATEOFBIRTH end ,'dd/mm/yyyy') DATEOFBIRTH, DECODE(CF.CTMTYPE,'001','001','005') IDTYPE, cf.IDCODE ,to_date( case when cf.IDDATE is null then '01/01/2000' else cf.IDDATE end ,'dd/mm/yyyy') IDDATE,  cf.IDPLACE
,  cf.ADDRESS ADDRESS1 , nvl(cf.PHONE,'-----') PHONE ,cf.mobilecall MOBILE,
 cf.FAX ,cf.EMAIL   ,  '234' COUNTRY, cf.CUSTODYCD ,to_date( case when cf.opendate is null then '01/01/2000' else cf.opendate end ,'dd/mm/yyyy')  OPNDATE ,cf.custodycd DESCRIPTION,
DECODE(CF.CTMTYPE,'002','003',trim(cf.SEX)) SEX ,  decode(trim(CF.CTMTYPE),'001','I','B') CUSTTYPE,trim(af.actype) actype,trim(CF.CTMTYPE) AFTYPE,PIN,trim(AF.ISONLINE) TRADEONLINE , NVL(province,'--') province,trim(CF.BRID) BRID,trim(AF.COREBANK)COREBANK,
'---' bankname, CASE WHEN AF.COREBANK='Y' THEN bankacctno ELSE '' END  bankacctno,TRIM(CF.ISDEPO) ISDEPO,CF.PHONE1,CF.ADDRESS1 ADDRESS_CONT,'001' TERMOFUSE,
 DECODE (SUBSTR(CF.custodycd,4,1),'F',SUBSTR(CF.custodycd,5),'' ) tradingcode
FROM CFMASTCV cf, afmastcv af
WHERE cf.custodycd = af.custodycd  and ( SUBSTR(cf.custodycd,1,4)<>'091C'
or instr('0123456789', SUBSTR(cf.custodycd,5,1))=0)
)
LOOP


INSERT INTO CFMAST
(CUSTID,SHORTNAME,FULLNAME ,MNEMONIC , DATEOFBIRTH,IDTYPE,IDCODE,IDDATE,IDPLACE,IDEXPIRED,ADDRESS,PHONE,MOBILE  ,FAX,EMAIL,COUNTRY,PROVINCE , POSTCODE,RESIDENT,CLASS,GRINVESTOR,INVESTRANGE,TIMETOJOIN,CUSTODYCD,STAFF,COMPANYID,POSITION,SEX,SECTOR,BUSINESSTYPE,INVESTTYPE,EXPERIENCETYPE,INCOMERANGE,ASSETRANGE,FOCUSTYPE,BRID,CAREBY,APPROVEID,LASTDATE,AUDITORID,AUDITDATE,MARGINLIMIT,TRADELIMIT,ADVANCELIMIT,REPOLIMIT,DEPOSITLIMIT,MORTAGERATE,LANGUAGE,BANKACCTNO,BANKCODE,VALUDADDED,ISSUERID,DESCRIPTION,MARRIED,REFNAME,PHONE1,FAX1,TAXCODE,INTERNATION,OCCUPATION,EDUCATION,CUSTTYPE,STATUS,PSTATUS,INVESTMENTEXPERIENCE,PCUSTODYCD,EXPERIENCECD,ORGINF,TLID,ISBANKING,PIN,  USERNAME, MRLOANLIMIT, RISKLEVEL, EXPDATE, VALDATE, TRADINGCODE, TRADINGCODEDT, LAST_CHANGE, OPNDATE, CONTRACTCHK,CFCLSDATE,MARGINALLOW,CUSTATCOM,LNLIMITMAX,CFLNLIMITMAX,UPDATELIMITMAX,T0LOANLIMIT,DMSTS,ACTIVEDATE,AFSTATUS,MOBILESMS,OPENVIA)
VALUES
( REC.CUSTID ,REC.SHORTNAME ,REC.FULLNAME  ,NULL ,REC.DATEOFBIRTH ,'001',REC.IDCODE,REC.IDDATE,REC.IDPLACE ,TO_DATE('01/01/2020','DD/MM/YYYY'),REC.ADDRESS1,REC.PHONE,REC.MOBILE  ,REC.FAX,REC.EMAIL,rec.COUNTRY,REC.province ,   NULL,'002','001','001','001','001',REC.CUSTODYCD,'005',NULL,'001',REC.SEX,'001','009','004','002','001','001','001',REC.BRID,'0001',NULL,v_prevdate,NULL,NULL,0,0,0,0,0,0,'001',NULL,'000',NULL,NULL,REC.DESCRIPTION,'002',NULL,NULL,NULL,NULL,NULL,'001','002',REC.CUSTTYPE,rec.status,'P',NULL,NULL,'10000',NULL,NULL,'N',REC.PIN,NULL, 0.0000, 'M', null, null, REC.tradingcode, NULL, '', REC.OPNDATE, 'Y',NULL,'Y',REC.ISDEPO,NULL,NULL,NULL,0,'N',NULL,'N',NULL,'F');

INSERT INTO afmast (ACTYPE,CUSTID,ACCTNO,AFTYPE,TRADEFLOOR,TRADETELEPHONE,TRADEONLINE,PIN,LANGUAGE,TRADEPHONE,ALLOWDEBIT,BANKACCTNO,BANKNAME,SWIFTCODE,RECEIVEVIA,EMAIL,ADDRESS,FAX,CIACCTNO,IFRULECD,LASTDATE,STATUS,PSTATUS,MARGINLINE,TRADELINE,ADVANCELINE,REPOLINE,DEPOSITLINE,BRATIO,TERMOFUSE,DESCRIPTION,ICCFCD,ICCFTIED,TELELIMIT,ONLINELIMIT,CFTELELIMIT,CFONLINELIMIT,TRADERATE,DEPORATE,MISCRATE,FAX1,PHONE1,STMCYCLE,ISOTC,CONSULTANT,PISOTC,OPNDATE,FEEBASE,BANKACCTNOBLOCK,COREBANK,VIA,DMATCHAMT,MRIRATE,MRMRATE,MRLRATE,MRDUEDAY,MREXTDAY,MRCLAMT,MRCRLIMIT,MRCRLIMITMAX,GROUPLEADER,T0AMT,ETS,BRID,LAST_CHANGE,CLSDATE,CAREBY,AUTOADV,TLID,T0INTRATE,T0ACCTNAV,MRIRATIO,MRMRATIO,MRLRATIO,TRFBUYEXT,TRFBUYRATE,DEPOLASTDT,BRKFEETYPE,TRIGGERDATE)
VALUES(rec.actype,REC.CUSTID,REC.CUSTID,REC.AFTYPE,'Y','Y',REC.TRADEONLINE,NULL,'001',NULL,'Y',rec.BANKACCTNO,rec.BANKNAME,NULL,'E',REC.EMAIL,REC.ADDRESS1,NULL,REC.CUSTID,'001',TO_DATE('12/28/2011','MM/DD/RRRR'),REC.STATUS,'PPAPA',0,0,0,0,0,0,REC.TERMOFUSE,REC.DESCRIPTION,NULL,'Y',0,0,0,0,0,0,0,REC.FAX,REC.PHONE,'M','N','N','N',REC.OPNDATE,0,NULL,REC.COREBANK,'F',0,0,0,0,0,0,0,0,0,NULL,0,'N',REC.BRID,SYSDATE,NULL,'0006','N',NULL,0,0,0,0,0,0,100,NULL,'AF',NULL);


INSERT INTO CIMAST (ACTYPE,ACCTNO,CCYCD,AFACCTNO,CUSTID,OPNDATE,CLSDATE,LASTDATE,DORMDATE,STATUS,PSTATUS,BALANCE,CRAMT,DRAMT,CRINTACR,CRINTDT,ODINTACR,ODINTDT,AVRBAL,MDEBIT,MCREDIT,AAMT,RAMT,BAMT,EMKAMT,MMARGINBAL,MARGINBAL,ICCFCD,ICCFTIED,ODLIMIT,ADINTACR,ADINTDT,FACRTRADE,FACRDEPOSITORY,FACRMISC,MINBAL,ODAMT,NAMT,FLOATAMT,HOLDBALANCE,PENDINGHOLD,PENDINGUNHOLD,COREBANK,RECEIVING,NETTING,MBLOCK,OVAMT,DUEAMT,T0ODAMT,MBALANCE,MCRINTDT,TRFAMT,LAST_CHANGE,DFODAMT,DFDEBTAMT,DFINTDEBTAMT,CIDEPOFEEACR,TRFBUYAMT,INTFLOATAMT,FEEFLOATAMT,DEPOLASTDT,DEPOFEEAMT)
VALUES('0003',REC.CUSTID,'00',REC.CUSTID,REC.CUSTID,REC.OPNDATE,NULL,NULL,NULL,REC.STATUS,'P',0,0,0,0,REC.OPNDATE,0,REC.OPNDATE,0,0,0,0,0,0,0,0,0,NULL,'Y',0,0,NULL,0,0,0,0,0,0,0,0,0,0,REC.COREBANK,0,0,0,0,0,0,0,null,0,SYSDATE,0,0,0,0,0,0,0,NULL,0);

END LOOP;


COMMIT;

-- KHACH HANG MAGIN
plog.error(pkgctx, 'Convert_CFMAST'||'Khach hang magin');

FOR REC IN
(
SELECT  trim (CF.brid)|| replace(SUBSTR(cf.custodycd,5,10),'T','0')  ACCTNO , AFMAST.CUSTID CUSTID ,'A'STATUS
, '' SHORTNAME ,   cf.fullname FULLNAME ,SUBSTR( cf.fullname,  INSTR( cf.fullname ,' ',-1,1 ))  MNEMONIC
,case when cf.DATEOFBIRTH is null then to_date('01/01/2012','DD/MM/YYYY') else to_date('01/01/2012','DD/MM/YYYY') end  DATEOFBIRTH, DECODE(CF.CTMTYPE,'001','001','005') IDTYPE, cf.IDCODE ,to_date( case when cf.IDDATE is null then '01/01/2000' else cf.IDDATE end ,'dd/mm/yyyy') IDDATE,  cf.IDPLACE
,  cf.ADDRESS ADDRESS1 , nvl(cf.PHONE,'-----') PHONE ,cf.mobilecall MOBILE,
 cf.FAX ,cf.EMAIL   ,  '234' COUNTRY, cf.CUSTODYCD ,to_date( case when cf.opendate is null then '01/01/2000' else cf.opendate end ,'dd/mm/yyyy')  OPNDATE ,afm.custodycd DESCRIPTION,
DECODE(CF.CTMTYPE,'002','003',trim(cf.SEX)) SEX ,  decode(trim(CF.CTMTYPE),'001','I','B') CUSTTYPE,trim(AFM.actype) actype,trim(CF.CTMTYPE) AFTYPE,CF.PIN,'Y' TRADEONLINE , NVL(province,'--') province,trim(CF.BRID) BRID,'N' COREBANK,
'---'   bankname,  ''   bankacctno,TRIM(CF.ISDEPO) ISDEPO,CF.PHONE1,CF.ADDRESS1 ADDRESS_CONT,'001' TERMOFUSE,
 DECODE (SUBSTR(CF.custodycd,4,1),'F',SUBSTR(CF.custodycd,5),'' ) tradingcode
FROM CFMASTCV cf, AFMASTMCV AFM , AFMAST
WHERE  SUBSTR(AFM.custodycd,1,10) = AFMAST.DESCRIPTION
AND CF.CUSTODYCD = AFMAST.DESCRIPTION
)
LOOP

INSERT INTO afmast (ACTYPE,CUSTID,ACCTNO,AFTYPE,TRADEFLOOR,TRADETELEPHONE,TRADEONLINE,PIN,LANGUAGE,TRADEPHONE,ALLOWDEBIT,BANKACCTNO,BANKNAME,SWIFTCODE,RECEIVEVIA,EMAIL,ADDRESS,FAX,CIACCTNO,IFRULECD,LASTDATE,STATUS,PSTATUS,MARGINLINE,TRADELINE,ADVANCELINE,REPOLINE,DEPOSITLINE,BRATIO,TERMOFUSE,DESCRIPTION,ICCFCD,ICCFTIED,TELELIMIT,ONLINELIMIT,CFTELELIMIT,CFONLINELIMIT,TRADERATE,DEPORATE,MISCRATE,FAX1,PHONE1,STMCYCLE,ISOTC,CONSULTANT,PISOTC,OPNDATE,FEEBASE,BANKACCTNOBLOCK,COREBANK,VIA,DMATCHAMT,MRIRATE,MRMRATE,MRLRATE,MRDUEDAY,MREXTDAY,MRCLAMT,MRCRLIMIT,MRCRLIMITMAX,GROUPLEADER,T0AMT,ETS,BRID,LAST_CHANGE,CLSDATE,CAREBY,AUTOADV,TLID,T0INTRATE,T0ACCTNAV,MRIRATIO,MRMRATIO,MRLRATIO,TRFBUYEXT,TRFBUYRATE,DEPOLASTDT,BRKFEETYPE,TRIGGERDATE)
VALUES(rec.actype,REC.CUSTID,REC.ACCTNO,REC.AFTYPE,'Y','Y',REC.TRADEONLINE,NULL,'001',NULL,'Y',rec.BANKACCTNO,rec.BANKNAME,NULL,'E',REC.EMAIL,REC.ADDRESS1,NULL,REC.ACCTNO,'001',TO_DATE('12/28/2011','MM/DD/RRRR'),REC.STATUS,'PPAPA',0,0,0,0,0,0,REC.TERMOFUSE,REC.DESCRIPTION,NULL,'Y',0,0,0,0,0,0,0,REC.FAX,REC.PHONE,'M','N','N','N',REC.OPNDATE,0,NULL,REC.COREBANK,'F',0,0,0,0,0,0,0,0,0,NULL,0,'N',REC.BRID,SYSDATE,NULL,'0006','N',NULL,0,0,0,0,0,0,100,NULL,'AF',NULL);


INSERT INTO CIMAST (ACTYPE,ACCTNO,CCYCD,AFACCTNO,CUSTID,OPNDATE,CLSDATE,LASTDATE,DORMDATE,STATUS,PSTATUS,BALANCE,CRAMT,DRAMT,CRINTACR,CRINTDT,ODINTACR,ODINTDT,AVRBAL,MDEBIT,MCREDIT,AAMT,RAMT,BAMT,EMKAMT,MMARGINBAL,MARGINBAL,ICCFCD,ICCFTIED,ODLIMIT,ADINTACR,ADINTDT,FACRTRADE,FACRDEPOSITORY,FACRMISC,MINBAL,ODAMT,NAMT,FLOATAMT,HOLDBALANCE,PENDINGHOLD,PENDINGUNHOLD,COREBANK,RECEIVING,NETTING,MBLOCK,OVAMT,DUEAMT,T0ODAMT,MBALANCE,MCRINTDT,TRFAMT,LAST_CHANGE,DFODAMT,DFDEBTAMT,DFINTDEBTAMT,CIDEPOFEEACR,TRFBUYAMT,INTFLOATAMT,FEEFLOATAMT,DEPOLASTDT,DEPOFEEAMT)
VALUES('0003',REC.ACCTNO,'00',REC.ACCTNO,REC.CUSTID,REC.OPNDATE,NULL,NULL,NULL,REC.STATUS,'P',0,0,0,0,REC.OPNDATE,0,REC.OPNDATE,0,0,0,0,0,0,0,0,0,NULL,'Y',0,0,NULL,0,0,0,0,0,0,0,0,0,0,REC.COREBANK,0,0,0,0,0,0,0,null,0,SYSDATE,0,0,0,0,0,0,0,NULL,0);

END LOOP;

UPDATE CFMAST SET custatcom ='N' WHERE CUSTODYCD ='BIDB500028';

commit ;

for rec in (
select  decode(af.description,'BIDB500028','0001','091P000001','0002','0003') citype,ci.acctno
from cimast ci,afmast af
where ci.acctno = af.acctno )

loop
update cimast set actype = rec.citype where acctno = rec.acctno ;
end loop ;


COMMIT;

-- KHANH HANG DONG
plog.error(pkgctx, 'Convert_CFMAST'||'Khach hang dong');
begin
for rec in (
select afc.custodycd, af.acctno ,TO_DATE(substr(closedate,1,11) ,'MM/DD/YYYY') closedate
from afmastclosecv afc,cfmast cf , afmast af where afc.custodycd = cf.custodycd and cf.custid = af.custid )
loop
update afmast set status ='C',clsdate= REC.closedate   WHERE ACCTNO = REC.ACCTNO ;
update CImast set status ='C' WHERE ACCTNO = REC.ACCTNO ;
end loop ;
end ;

UPDATE CFMAST SET PIN =UPPER(IDCODE);
UPDATE CFMAST SET username =CUSTODYCD ;

UPDATE AFMAST SET autoadv ='Y';

 begin
 for rec in (select custid , mobile from cfmast)
 loop
 update afmast set tradephone= rec.mobile, fax1= rec.mobile where acctno = rec.custid ;
 end loop ;
 end ;


BEGIN
FOR REC IN (
SELECT AF.ACCTNO, MRT.mrirate,MRT.mrmrate,MRT.mrlrate,MRT.mriratio,MRT.mrmratio,MRT.mrlratio
FROM AFMAST AF, AFTYPE AFP, MRTYPE mrt
WHERE AF.actype = AFP.ACTYPE
AND AFP.mrtype =MRT.actype)
LOOP
UPDATE AFMAST SET mrirate = REC.mrirate , mrmrate= REC.mrmrate , mrlrate =REC.mrlrate
, mriratio= rec.mriratio,mrmratio=rec.mrmratio,mrlratio=rec.mrlratio
WHERE ACCTNO = REC.ACCTNO;
END LOOP;
END ;

commit ;

  plog.error(pkgctx, 'End Convert_CFMAST');
  exception
    when others then
      plog.error(pkgctx, sqlerrm);
      plog.setEndSection(pkgctx, 'Convert_CFMAST');
  end;



procedure Convert_CIMAST is

v_currdate date;
v_prevdate date;
v_nextdate date;
v_t_1_date date;
v_t_2_date date;
v_t_3_date date;

begin
plog.error(pkgctx, 'Begin Convert_CIMAST');

select to_date(varvalue,'DD/MM/RRRR') into v_currdate from sysvar where grname ='SYSTEM' and varname ='CURRDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_prevdate from sysvar where grname ='SYSTEM' and varname ='PREVDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_nextdate from sysvar where grname ='SYSTEM' and varname ='NEXTDATE';
v_t_1_date:=get_t_date(v_currdate,1);
v_t_2_date:=get_t_date(v_currdate,2);
v_t_3_date:=get_t_date(v_currdate,3);

FOR REC IN
(
select  AF.ACCTNO, SUBSTR(AF.ACCTNO,1,4) BRID  ,  SUBSTR(AF.ACCTNO,1,4)|| LPAD(seq_CVtxnum.NEXTVAL,6,'0') TXNUM,
nvl(to_number(ci.balance),0) balance,nvl(to_number(ci.emkamt),0) emkamt,NVL(RECEIVING.AMT ,0) RECEIVING , NVL(NETTING.AMT ,0) NETTING
from cimastcv ci ,  afmast af,cfmast cf,
(select  sum(matchprice*matchqtty)amt,  custodycd  from stschdcv
 WHERE  exectype='NB' group by custodycd) NETTING,
(select  sum(matchprice*matchqtty) amt, custodycd  from stschdcv
 WHERE  exectype='NS' group by custodycd) RECEIVING
where  af.description = ci.custodycd (+)
AND af.description = NETTING.custodycd (+)
AND af.description = RECEIVING.custodycd (+)
and cf.custid = af.custid
and cf.custatcom='Y'
AND (ci.balance <>0 OR NVL(NETTING.AMT,0)<>0 OR  NVL(RECEIVING.AMT ,0) <>0 )
)
LOOP

INSERT INTO TLLOGALL
(AUTOID,TXNUM,TXDATE,TXTIME,BRID,TLID,OFFID,OVRRQS,CHID,CHKID,TLTXCD,IBT,BRID2,TLID2,CCYUSAGE,OFF_LINE,DELTD,BRDATE,BUSDATE,TXDESC,IPADDRESS,WSNAME,TXSTATUS,MSGSTS,OVRSTS,BATCHNAME,MSGAMT,MSGACCT,CHKTIME,OFFTIME)
VALUES
(SEQ_TLLOG.NEXTVAL ,REC.TXNUM,v_t_1_date,'09:36:38',REC.BRID,'0001','0001','@00','0001',NULL,'9100',NULL,NULL,NULL,'00','N','N',v_t_1_date,v_t_1_date,'CASH DEPOSIT','10.26.0.175','FSS-P406','1','0','0','DAY',REC.BALANCE,REC.ACCTNO,NULL,'09:36:51');

INSERT INTO CITRANA
(TXNUM,TXDATE,ACCTNO,TXCD,NAMT,CAMT,REF,DELTD,ACCTREF,AUTOID)
VALUES
(REC.TXNUM,v_t_1_date,REC.ACCTNO,'0012',REC.BALANCE,NULL,NULL,'N',NULL,SEQ_CITRAN.NEXTVAL );

INSERT INTO CITRANA
(TXNUM,TXDATE,ACCTNO,TXCD,NAMT,CAMT,REF,DELTD,ACCTREF,AUTOID)
VALUES
(REC.TXNUM,v_t_1_date,REC.ACCTNO,'0014',REC.BALANCE,NULL,NULL,'N',NULL,SEQ_CITRAN.NEXTVAL );

INSERT INTO CITRANA
(TXNUM,TXDATE,ACCTNO,TXCD,NAMT,CAMT,REF,DELTD,ACCTREF,AUTOID)
VALUES
(REC.TXNUM,v_t_1_date,REC.ACCTNO,'0046',REC.RECEIVING,NULL,NULL,'N',NULL,SEQ_CITRAN.NEXTVAL );

INSERT INTO CITRANA
(TXNUM,TXDATE,ACCTNO,TXCD,NAMT,CAMT,REF,DELTD,ACCTREF,AUTOID)
VALUES
(REC.TXNUM,v_t_1_date,REC.ACCTNO,'0070',REC.NETTING,NULL,NULL,'N',NULL,SEQ_CITRAN.NEXTVAL );

UPDATE CIMAST SET   BALANCE = BALANCE + REC.BALANCE,
CRAMT =CRAMT+REC.BALANCE , RECEIVING= RECEIVING+ REC.RECEIVING , NETTING = NETTING +REC.NETTING
WHERE  ACCTNO = REC.ACCTNO ;
END LOOP;


COMMIT;


    plog.error(pkgctx, 'End  Convert_CIMAST');
  exception
    when others then
      plog.error(pkgctx, sqlerrm);
      plog.setEndSection(pkgctx, 'end Convert_CIMAST');
  end;





procedure Convert_CIINTTRAN is

v_currdate date;
v_prevdate date;
v_nextdate date;
v_t_1_date date;
v_t_2_date date;
v_t_3_date date;

begin
plog.setBeginSection(pkgctx, 'Convert_CIINTTRAN');

select to_date(varvalue,'DD/MM/RRRR') into v_currdate from sysvar where grname ='SYSTEM' and varname ='CURRDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_prevdate from sysvar where grname ='SYSTEM' and varname ='PREVDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_nextdate from sysvar where grname ='SYSTEM' and varname ='NEXTDATE';
v_t_1_date:=get_t_date(v_currdate,1);
v_t_2_date:=get_t_date(v_currdate,2);
v_t_3_date:=get_t_date(v_currdate,3);


update  cimast  set crintacr =0;


for rec in (
 select af.acctno ,cri.crintacr,to_date ((select varvalue from sysvar where varname ='CURRDATE' ),'dd/mm/yyyy') CURRDATE ,ci.balance
 from crintacrcv cri , afmast af,cimast ci
where cri.custodycd = af.description and af.acctno = ci.acctno
and round (cri.crintacr)<>0
and ci.acctno = af.acctno
 )
loop
update cimast set crintacr = rec.crintacr where acctno =rec.acctno;

insert into CIINTTRAN (AUTOID, ACCTNO, INTTYPE, FRDATE, TODATE, ICRULE, IRRATE, INTBAL, INTAMT)
values (seq_ciinttran.nextval, rec.acctno , 'CR', rec.CURRDATE, rec.CURRDATE, 'S', 2.4, rec.balance, rec.crintacr);

end loop;




    plog.setEndSection(pkgctx, 'end  Convert_CIINTTRAN');
  exception
    when others then
      plog.error(pkgctx, sqlerrm);
      plog.setEndSection(pkgctx, 'end Convert_CIINTTRAN');
  end;


procedure Convert_SEMAST is

v_currdate date;
v_prevdate date;
v_nextdate date;
v_t_1_date date;
v_t_2_date date;
v_t_3_date date;

begin
plog.error(pkgctx, 'Begin Convert_SEMAST');

select to_date(varvalue,'DD/MM/RRRR') into v_currdate from sysvar where grname ='SYSTEM' and varname ='CURRDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_prevdate from sysvar where grname ='SYSTEM' and varname ='PREVDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_nextdate from sysvar where grname ='SYSTEM' and varname ='NEXTDATE';
v_t_1_date:=get_t_date(v_currdate,1);
v_t_2_date:=get_t_date(v_currdate,2);
v_t_3_date:=get_t_date(v_currdate,3);

--TAO MA CHUNG KHOAN
plog.error(pkgctx, 'Convert_SEMAST'||'Tao ma chung khoan');

for rec in
(

select   af.description CUSTODYCD,sb.SYMBOL,af.ACCTNO,sb.CODEID ,af.acctno||sb.codeid seacctno,af.custid , SUM (NVL(TRADE,0)) TRADE,SUM (NVL(STANDING,0)) STANDING,SUM (NVL(WAITFORTRADE,0)) WAITFORTRADE
,SUM (NVL(BLOCKED,0)) BLOCKED,SUM (NVL(MORTAGE,0)) MORTAGE,SUM (NVL(BLOCKW,0)) BLOCKW, SUM(NVL(se.NETTING,0)) NETTING,SUM(NVL(se.RECEIVING,0)) RECEIVING
from AFMAST AF,  SBSECURITIES sb,
(
SELECT CUSTODYCD , SYMBOL , to_number(NVL(TRADE,0)) TRADE ,to_number(NVL(STANDING,0)) STANDING,to_number(NVL(WAITFORTRADE,0)) WAITFORTRADE ,to_number(NVL(BLOCKED,0)) BLOCKED ,to_number(NVL(MORTAGE,0)) MORTAGE , to_number(NVL(BLOCKW,0)) BLOCKW , 0 NETTING, 0 RECEIVING
FROM SEMASTCV
UNION ALL
SELECT  CUSTODYCD , SYMBOL , 0 TRADE , 0 STANDING,0 WAITFORTRADE ,0 BLOCKED ,0 MORTAGE ,0 BLOCKW , SUM(matchqtty) NETTING, 0 RECEIVING
FROM stschdcv
WHERE  exectype='NB' group by custodycd,symbol
union all
SELECT  CUSTODYCD , SYMBOL , 0 TRADE , 0 STANDING,0 WAITFORTRADE ,0 BLOCKED ,0 MORTAGE ,0 BLOCKW , 0 NETTING, SUM(matchqtty) RECEIVING
FROM stschdcv
WHERE  exectype='NS' group by custodycd,symbol)se
where  af.description = se.custodycd
and sb.symbol = se.symbol
group by  af.description,sb.SYMBOL,af.ACCTNO,sb.CODEID,af.custid
having  SUM (NVL(TRADE,0)) +SUM (NVL(STANDING,0)) +SUM (NVL(WAITFORTRADE,0))+SUM (NVL(BLOCKED,0)) +SUM (NVL(BLOCKW,0))
+SUM (NVL(MORTAGE,0)) +SUM(NVL(se.NETTING,0)) +SUM(NVL(se.RECEIVING,0)) >0
union
SELECT  af.description CUSTODYCD,sb.SYMBOL,af.ACCTNO,sb.CODEID ,af.acctno||sb.codeid seacctno,af.custid , to_number(NVL(TRADE,0)) TRADE ,to_number(NVL(STANDING,0)) STANDING,to_number(NVL(WAITFORTRADE,0)) WAITFORTRADE ,to_number(NVL(BLOCKED,0)) BLOCKED ,to_number(NVL(MORTAGE,0)) MORTAGE , to_number(NVL(BLOCKW,0)) BLOCKW , 0 NETTING, 0 RECEIVING
FROM SEMASTCV  se, AFMAST AF,  SBSECURITIES sb
where WAITFORTRADE >0
and se.custodycd = af.description
and se.symbol||'_WFT' = SB.SYMBOL
)
loop
insert into semast (ACTYPE, ACCTNO, CODEID, AFACCTNO, OPNDATE, CLSDATE, LASTDATE, STATUS, PSTATUS, IRTIED, IRCD, COSTPRICE, TRADE, MORTAGE, MARGIN, NETTING, STANDING, WITHDRAW, DEPOSIT, LOAN, BLOCKED, RECEIVING, TRANSFER, PREVQTTY, DCRQTTY, DCRAMT, DEPOFEEACR, REPO, PENDING, TBALDEPO, CUSTID, COSTDT, SECURED, ICCFCD, ICCFTIED, TBALDT, SENDDEPOSIT, SENDPENDING, DDROUTQTTY, DDROUTAMT, DTOCLOSE, SDTOCLOSE, QTTY_TRANSFER, LAST_CHANGE, TOTALBUYAMT, TOTALSELLAMT, TOTALSELLQTTY, ACCUMULATEPNL, DEALINTPAID, WTRADE)
values ('0000', rec.seacctno, rec.codeid, rec.ACCTNO,v_t_1_date, null, v_t_1_date, 'A', '', 'Y', '001', 0.00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, rec.custid, v_t_1_date, 0, '', 'Y',v_t_1_date, 0, 0, 0, 0, 0, 0, 0, '18-OCT-11 03.30.05.344506 PM', 0, 0, 0, 0, 0.0000, 0);
end loop;

commit;


-- SO DU CK GIAO DICH
plog.error(pkgctx, 'Convert_SEMAST'||'Chung khoan giao dich');

for rec in
(
select SUBSTR(a.ACCTNO,1,4)|| LPAD(seq_CVtxnum.NEXTVAL,6,'0')  TXNUM ,a.* from
(select   cf.CUSTODYCD,sb.SYMBOL,af.ACCTNO,sb.CODEID ,af.acctno||sb.codeid seacctno,cf.custid , SUM (NVL(TRADE,0)) TRADE,SUM (NVL(STANDING,0)) STANDING,SUM (NVL(WAITFORTRADE,0)) WAITFORTRADE
,SUM (NVL(BLOCKED,0)) BLOCKED,SUM (NVL(MORTAGE,0)) MORTAGE,SUM (NVL(BLOCKW,0)) BLOCKW, SUM(NVL(se.NETTING,0)) NETTING,SUM(NVL(se.RECEIVING,0)) RECEIVING
from AFMAST AF, CFMAST CF , SBSECURITIES sb,
(
SELECT CUSTODYCD , SYMBOL , to_number(NVL(TRADE,0)) TRADE ,to_number(NVL(STANDING,0)) STANDING,to_number(NVL(WAITFORTRADE,0)) WAITFORTRADE ,to_number(NVL(BLOCKED,0)) BLOCKED ,to_number(NVL(MORTAGE,0)) MORTAGE , to_number(NVL(BLOCKW,0)) BLOCKW , 0 NETTING, 0 RECEIVING
FROM SEMASTCV
UNION ALL
SELECT  CUSTODYCD , SYMBOL , 0 TRADE , 0 STANDING,0 WAITFORTRADE ,0 BLOCKED ,0 MORTAGE ,0 BLOCKW , SUM(matchqtty) NETTING, 0 RECEIVING
FROM stschdcv
WHERE  exectype='NS' group by custodycd,symbol
union all
SELECT  CUSTODYCD , SYMBOL , 0 TRADE , 0 STANDING,0 WAITFORTRADE ,0 BLOCKED ,0 MORTAGE ,0 BLOCKW , 0 NETTING, SUM(matchqtty) RECEIVING
FROM stschdcv
WHERE  exectype='NB' group by custodycd,symbol)se
where cf.custid= af.custid
and  af.description = se.custodycd
and sb.symbol = se.symbol
and cf.custatcom='Y'
group by  cf.CUSTODYCD,sb.SYMBOL,af.ACCTNO,sb.CODEID,cf.custid
having SUM (NVL(TRADE,0)) + SUM(NVL(se.NETTING,0)) + SUM(NVL(se.RECEIVING,0)) <>0
)a
)
loop

INSERT INTO tllogall
(AUTOID,TXNUM,TXDATE,TXTIME,BRID,TLID,OFFID,OVRRQS,CHID,CHKID,TLTXCD,IBT,BRID2,TLID2,CCYUSAGE,OFF_LINE,DELTD,BRDATE,BUSDATE,TXDESC,IPADDRESS,WSNAME,TXSTATUS,MSGSTS,OVRSTS,BATCHNAME,MSGAMT,MSGACCT,CHKTIME,OFFTIME,CAREBYGRP)
VALUES
(seq_tllog.NEXTVAL ,rec.txnum,v_t_1_date,'13:50:24','0001','0001','0001','@00',NULL,NULL,'9902',NULL,NULL,NULL,'00','N','N',v_t_1_date,v_t_1_date,'Inward SE Transfer','10.26.0.125','namnt','1','0','0','DAY       ',rec.TRADE,REC.SEACCTNO,NULL,'01:51:39',NULL);


INSERT INTO setrana
(TXNUM,TXDATE,ACCTNO,TXCD,NAMT,CAMT,REF,DELTD,AUTOID)
VALUES
(rec.txnum,v_t_1_date,rec.seacctno,'0012',rec.TRADE,NULL,'','N',seq_setran.nextval);

INSERT INTO setrana
(TXNUM,TXDATE,ACCTNO,TXCD,NAMT,CAMT,REF,DELTD,AUTOID)
VALUES
(rec.txnum,v_t_1_date,rec.seacctno,'0019',rec.NETTING,NULL,'','N',seq_setran.nextval);

INSERT INTO setrana
(TXNUM,TXDATE,ACCTNO,TXCD,NAMT,CAMT,REF,DELTD,AUTOID)
VALUES
(rec.txnum,v_t_1_date,rec.seacctno,'0016',rec.RECEIVING,NULL,'','N',seq_setran.nextval);


UPDATE SEMAST SET  TRADE = TRADE + REC.TRADE ,
NETTING = NETTING+ REC.NETTING,RECEIVING = RECEIVING+ REC.RECEIVING
WHERE  ACCTNO =REC.SEACCTNO ;

end loop;

COMMIT;

-- SO DU CK CAM CO GUI LEN TRUNG TAM
plog.error(pkgctx, 'Convert_SEMAST'||'CAM CO GUI LEN TRUNG TAM');
for rec in
(
select SUBSTR(a.ACCTNO,1,4)|| LPAD(seq_CVtxnum.NEXTVAL,6,'0')  TXNUM ,a.* from
(select   cf.CUSTODYCD,sb.SYMBOL,af.ACCTNO,sb.CODEID ,af.acctno||sb.codeid seacctno,cf.custid , SUM (NVL(TRADE,0)) TRADE,SUM (NVL(STANDING,0)) STANDING,SUM (NVL(WAITFORTRADE,0)) WAITFORTRADE
,SUM (NVL(BLOCKED,0)) BLOCKED,SUM (NVL(MORTAGE,0)) MORTAGE,SUM (NVL(BLOCKW,0)) BLOCKW, SUM(NVL(se.NETTING,0)) NETTING,SUM(NVL(se.RECEIVING,0)) RECEIVING
from AFMAST AF, CFMAST CF , SBSECURITIES sb,
(
SELECT CUSTODYCD , SYMBOL , to_number(NVL(TRADE,0)) TRADE ,to_number(NVL(STANDING,0)) STANDING,to_number(NVL(WAITFORTRADE,0)) WAITFORTRADE ,to_number(NVL(BLOCKED,0)) BLOCKED ,to_number(NVL(MORTAGE,0)) MORTAGE , to_number(NVL(BLOCKW,0)) BLOCKW , 0 NETTING, 0 RECEIVING
FROM SEMASTCV
UNION ALL
SELECT  CUSTODYCD , SYMBOL , 0 TRADE , 0 STANDING,0 WAITFORTRADE ,0 BLOCKED ,0 MORTAGE ,0 BLOCKW , SUM(matchqtty) NETTING, 0 RECEIVING
FROM stschdcv
WHERE  exectype='NS' group by custodycd,symbol
union all
SELECT  CUSTODYCD , SYMBOL , 0 TRADE , 0 STANDING,0 WAITFORTRADE ,0 BLOCKED ,0 MORTAGE ,0 BLOCKW , 0 NETTING, SUM(matchqtty) RECEIVING
FROM stschdcv
WHERE  exectype='NB' group by custodycd,symbol)se
where cf.custid= af.custid
and  af.description= se.custodycd
and sb.symbol = se.symbol
group by  cf.CUSTODYCD,sb.SYMBOL,af.ACCTNO,sb.CODEID,cf.custid
having  SUM(NVL(se.STANDING,0)) <>0
)a
)
loop

INSERT INTO tllogall
(AUTOID,TXNUM,TXDATE,TXTIME,BRID,TLID,OFFID,OVRRQS,CHID,CHKID,TLTXCD,IBT,BRID2,TLID2,CCYUSAGE,OFF_LINE,DELTD,BRDATE,BUSDATE,TXDESC,IPADDRESS,WSNAME,TXSTATUS,MSGSTS,OVRSTS,BATCHNAME,MSGAMT,MSGACCT,CHKTIME,OFFTIME,CAREBYGRP)
VALUES
(seq_tllog.NEXTVAL ,rec.txnum,v_t_1_date,'13:50:24','0001','0001','0001','@00',NULL,NULL,'9902',NULL,NULL,NULL,'00','N','N',v_t_1_date,v_t_1_date,'Inward SE Transfer','10.26.0.125','namnt','1','0','0','DAY       ',rec.TRADE,REC.SEACCTNO,NULL,'01:51:39',NULL);

INSERT INTO setrana
(TXNUM,TXDATE,ACCTNO,TXCD,NAMT,CAMT,REF,DELTD,AUTOID)
VALUES
(rec.txnum,v_t_1_date,rec.seacctno,'0013',rec.STANDING,NULL,'002','N',seq_setran.nextval);


INSERT INTO setrana
(TXNUM,TXDATE,ACCTNO,TXCD,NAMT,CAMT,REF,DELTD,AUTOID)
VALUES
(rec.txnum,v_t_1_date,rec.seacctno,'0065',rec.STANDING,NULL,'002','N',seq_setran.nextval);

UPDATE SEMAST SET  MORTAGE = MORTAGE + REC.STANDING,STANDING = STANDING - REC.STANDING
WHERE  ACCTNO =REC.SEACCTNO ;

end loop;

COMMIT;



-- SO DU CK CAM CO BLOCKED
plog.error(pkgctx, 'Convert_SEMAST'||'Han che chuyen nhuong');

for rec in
(
select SUBSTR(a.ACCTNO,1,4)|| LPAD(seq_CVtxnum.NEXTVAL,6,'0')  TXNUM ,a.* from
(select   cf.CUSTODYCD,sb.SYMBOL,af.ACCTNO,sb.CODEID ,af.acctno||sb.codeid seacctno,cf.custid , SUM (NVL(TRADE,0)) TRADE,SUM (NVL(STANDING,0)) STANDING,SUM (NVL(WAITFORTRADE,0)) WAITFORTRADE
,SUM (NVL(BLOCKED,0)) BLOCKED,SUM (NVL(MORTAGE,0)) MORTAGE,SUM (NVL(BLOCKW,0)) BLOCKW, SUM(NVL(se.NETTING,0)) NETTING,SUM(NVL(se.RECEIVING,0)) RECEIVING
from AFMAST AF, CFMAST CF , SBSECURITIES sb,
(
SELECT CUSTODYCD , SYMBOL , to_number(NVL(TRADE,0)) TRADE ,to_number(NVL(STANDING,0)) STANDING,to_number(NVL(WAITFORTRADE,0)) WAITFORTRADE ,to_number(NVL(BLOCKED,0)) BLOCKED ,to_number(NVL(MORTAGE,0)) MORTAGE , to_number(NVL(BLOCKW,0)) BLOCKW , 0 NETTING, 0 RECEIVING
FROM SEMASTCV
UNION ALL
SELECT  CUSTODYCD , SYMBOL , 0 TRADE , 0 STANDING,0 WAITFORTRADE ,0 BLOCKED ,0 MORTAGE ,0 BLOCKW , SUM(matchqtty) NETTING, 0 RECEIVING
FROM stschdcv
WHERE  exectype='NS' group by custodycd,symbol
union all
SELECT  CUSTODYCD , SYMBOL , 0 TRADE , 0 STANDING,0 WAITFORTRADE ,0 BLOCKED ,0 MORTAGE ,0 BLOCKW , 0 NETTING, SUM(matchqtty) RECEIVING
FROM stschdcv
WHERE  exectype='NB' group by custodycd,symbol)se
where cf.custid= af.custid
and  af.description= se.custodycd
and sb.symbol = se.symbol
group by  cf.CUSTODYCD,sb.SYMBOL,af.ACCTNO,sb.CODEID,cf.custid
having  SUM(NVL(se.BLOCKED,0)) <>0
)a
)
loop

INSERT INTO tllogall
(AUTOID,TXNUM,TXDATE,TXTIME,BRID,TLID,OFFID,OVRRQS,CHID,CHKID,TLTXCD,IBT,BRID2,TLID2,CCYUSAGE,OFF_LINE,DELTD,BRDATE,BUSDATE,TXDESC,IPADDRESS,WSNAME,TXSTATUS,MSGSTS,OVRSTS,BATCHNAME,MSGAMT,MSGACCT,CHKTIME,OFFTIME,CAREBYGRP)
VALUES
(seq_tllog.NEXTVAL ,rec.txnum,v_t_1_date,'13:50:24','0001','0001','0001','@00',NULL,NULL,'9902',NULL,NULL,NULL,'00','N','N',v_t_1_date,v_t_1_date,'Inward SE Transfer','10.26.0.125','namnt','1','0','0','DAY       ',rec.TRADE,REC.SEACCTNO,NULL,'01:51:39',NULL);

INSERT INTO setrana
(TXNUM,TXDATE,ACCTNO,TXCD,NAMT,CAMT,REF,DELTD,AUTOID)
VALUES
(rec.txnum,v_t_1_date,rec.seacctno,'0043',rec.BLOCKED,NULL,'002','N',seq_setran.nextval);

INSERT INTO semastdtl (ACCTNO,QTTY,QTTYTYPE,TXNUM,TXDATE,DELTD,DFQTTY,STATUS,AUTOID,RDATE)
VALUES(rec.SEacctno,rec.BLOCKED,'002',rec.txnum,v_t_1_date,'N',0,'N',seq_semastdtl.nextval,NULL);

UPDATE SEMAST SET  BLOCKED = BLOCKED + REC.BLOCKED
WHERE  ACCTNO =REC.SEACCTNO ;

end loop;

COMMIT;


-- SO DU CK CAM CO BLOCKEDW
plog.error(pkgctx, 'Convert_SEMAST'||'Phong toa');

for rec in
(
select SUBSTR(a.ACCTNO,1,4)|| LPAD(seq_CVtxnum.NEXTVAL,6,'0')  TXNUM ,a.* from
(select   cf.CUSTODYCD,sb.SYMBOL,af.ACCTNO,sb.CODEID ,af.acctno||sb.codeid seacctno,cf.custid , SUM (NVL(TRADE,0)) TRADE,SUM (NVL(STANDING,0)) STANDING,SUM (NVL(WAITFORTRADE,0)) WAITFORTRADE
,SUM (NVL(BLOCKED,0)) BLOCKED,SUM (NVL(MORTAGE,0)) MORTAGE,SUM (NVL(BLOCKW,0)) BLOCKW, SUM(NVL(se.NETTING,0)) NETTING,SUM(NVL(se.RECEIVING,0)) RECEIVING
from AFMAST AF, CFMAST CF , SBSECURITIES sb,
(
SELECT CUSTODYCD , SYMBOL , to_number(NVL(TRADE,0)) TRADE ,to_number(NVL(STANDING,0)) STANDING,to_number(NVL(WAITFORTRADE,0)) WAITFORTRADE ,to_number(NVL(BLOCKED,0)) BLOCKED ,to_number(NVL(MORTAGE,0)) MORTAGE , to_number(NVL(BLOCKW,0)) BLOCKW , 0 NETTING, 0 RECEIVING
FROM SEMASTCV
UNION ALL
SELECT  CUSTODYCD , SYMBOL , 0 TRADE , 0 STANDING,0 WAITFORTRADE ,0 BLOCKED ,0 MORTAGE ,0 BLOCKW , SUM(matchqtty) NETTING, 0 RECEIVING
FROM stschdcv
WHERE  exectype='NS' group by custodycd,symbol
union all
SELECT  CUSTODYCD , SYMBOL , 0 TRADE , 0 STANDING,0 WAITFORTRADE ,0 BLOCKED ,0 MORTAGE ,0 BLOCKW , 0 NETTING, SUM(matchqtty) RECEIVING
FROM stschdcv
WHERE  exectype='NB' group by custodycd,symbol)se
where cf.custid= af.custid
and  af.description= se.custodycd
and sb.symbol = se.symbol
group by  cf.CUSTODYCD,sb.SYMBOL,af.ACCTNO,sb.CODEID,cf.custid
having  SUM(NVL(se.BLOCKW,0)) <>0
)a
)
loop

INSERT INTO tllogall
(AUTOID,TXNUM,TXDATE,TXTIME,BRID,TLID,OFFID,OVRRQS,CHID,CHKID,TLTXCD,IBT,BRID2,TLID2,CCYUSAGE,OFF_LINE,DELTD,BRDATE,BUSDATE,TXDESC,IPADDRESS,WSNAME,TXSTATUS,MSGSTS,OVRSTS,BATCHNAME,MSGAMT,MSGACCT,CHKTIME,OFFTIME,CAREBYGRP)
VALUES
(seq_tllog.NEXTVAL ,rec.txnum,v_t_1_date,'13:50:24','0001','0001','0001','@00',NULL,NULL,'9902',NULL,NULL,NULL,'00','N','N',v_t_1_date,v_t_1_date,'Inward SE Transfer','10.26.0.125','namnt','1','0','0','DAY       ',rec.TRADE,REC.SEACCTNO,NULL,'01:51:39',NULL);

INSERT INTO setrana
(TXNUM,TXDATE,ACCTNO,TXCD,NAMT,CAMT,REF,DELTD,AUTOID)
VALUES
(rec.txnum,v_t_1_date,rec.seacctno,'0043',rec.BLOCKW,NULL,'007','N',seq_setran.nextval);

INSERT INTO semastdtl (ACCTNO,QTTY,QTTYTYPE,TXNUM,TXDATE,DELTD,DFQTTY,STATUS,AUTOID,RDATE)
VALUES(rec.SEacctno,rec.BLOCKW,'007',rec.txnum,v_t_1_date,'N',0,'N',seq_semastdtl.nextval,NULL);

UPDATE SEMAST SET  BLOCKED = BLOCKED + REC.BLOCKW
WHERE  ACCTNO =REC.SEACCTNO ;

end loop;

COMMIT;

plog.error(pkgctx, 'Convert_SEMAST'||'Cho giao dich');

for rec in
(
select SUBSTR(a.ACCTNO,1,4)|| LPAD(seq_CVtxnum.NEXTVAL,6,'0')  TXNUM ,a.* from
(select   cf.CUSTODYCD,sb.SYMBOL,af.ACCTNO,sb.CODEID ,af.acctno||sb.codeid seacctno,cf.custid , SUM (NVL(TRADE,0)) TRADE,SUM (NVL(STANDING,0)) STANDING,SUM (NVL(WAITFORTRADE,0)) WAITFORTRADE
,SUM (NVL(BLOCKED,0)) BLOCKED,SUM (NVL(MORTAGE,0)) MORTAGE,SUM (NVL(BLOCKW,0)) BLOCKW, SUM(NVL(se.NETTING,0)) NETTING,SUM(NVL(se.RECEIVING,0)) RECEIVING
from AFMAST AF, CFMAST CF , SBSECURITIES sb,
(
SELECT CUSTODYCD , SYMBOL , to_number(NVL(TRADE,0)) TRADE ,to_number(NVL(STANDING,0)) STANDING,to_number(NVL(WAITFORTRADE,0)) WAITFORTRADE ,to_number(NVL(BLOCKED,0)) BLOCKED ,to_number(NVL(MORTAGE,0)) MORTAGE , to_number(NVL(BLOCKW,0)) BLOCKW , 0 NETTING, 0 RECEIVING
FROM SEMASTCV
UNION ALL
SELECT  CUSTODYCD , SYMBOL , 0 TRADE , 0 STANDING,0 WAITFORTRADE ,0 BLOCKED ,0 MORTAGE ,0 BLOCKW , SUM(matchqtty) NETTING, 0 RECEIVING
FROM stschdcv
WHERE  exectype='NS' group by custodycd,symbol
union all
SELECT  CUSTODYCD , SYMBOL , 0 TRADE , 0 STANDING,0 WAITFORTRADE ,0 BLOCKED ,0 MORTAGE ,0 BLOCKW , 0 NETTING, SUM(matchqtty) RECEIVING
FROM stschdcv
WHERE  exectype='NB' group by custodycd,symbol)se
where cf.custid= af.custid
and  af.description= se.custodycd
and replace(sb.symbol,'_WFT','') = se.symbol
AND INSTR(sb.symbol,'_WFT')>0
group by  cf.CUSTODYCD,sb.SYMBOL,af.ACCTNO,sb.CODEID,cf.custid
having  SUM(NVL(se.WAITFORTRADE,0)) <>0
)a
)
loop

INSERT INTO tllogall
(AUTOID,TXNUM,TXDATE,TXTIME,BRID,TLID,OFFID,OVRRQS,CHID,CHKID,TLTXCD,IBT,BRID2,TLID2,CCYUSAGE,OFF_LINE,DELTD,BRDATE,BUSDATE,TXDESC,IPADDRESS,WSNAME,TXSTATUS,MSGSTS,OVRSTS,BATCHNAME,MSGAMT,MSGACCT,CHKTIME,OFFTIME,CAREBYGRP)
VALUES
(seq_tllog.NEXTVAL ,rec.txnum,v_t_1_date,'13:50:24','0001','0001','0001','@00',NULL,NULL,'9902',NULL,NULL,NULL,'00','N','N',v_t_1_date,v_t_1_date,'Inward SE Transfer','10.26.0.125','namnt','1','0','0','DAY       ',rec.TRADE,REC.SEACCTNO,NULL,'01:51:39',NULL);

INSERT INTO setrana
(TXNUM,TXDATE,ACCTNO,TXCD,NAMT,CAMT,REF,DELTD,AUTOID)
VALUES
(rec.txnum,v_t_1_date,rec.seacctno,'0045',rec.WAITFORTRADE,NULL,'','N',seq_setran.nextval);

UPDATE SEMAST SET  trade = trade + REC.WAITFORTRADE
WHERE  ACCTNO =REC.SEACCTNO ;

end loop;

update semast set PREVQTTY= TRADE+MORTAGE+MARGIN+SECURED+BLOCKED+WITHDRAW;

COMMIT;

plog.error(pkgctx, 'End Convert_SEMAST');

  exception
    when others then
      plog.error(pkgctx, sqlerrm);
      plog.setEndSection(pkgctx, 'Convert_SEMAST');
  end;




procedure Convert_ODMAST is

v_currdate date;
v_prevdate date;
v_nextdate date;
v_t_1_date date;
v_t_2_date date;
v_t_3_date date;

begin
plog.error(pkgctx, 'Begin Convert_ODMAST');

select to_date(varvalue,'DD/MM/RRRR') into v_currdate from sysvar where grname ='SYSTEM' and varname ='CURRDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_prevdate from sysvar where grname ='SYSTEM' and varname ='PREVDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_nextdate from sysvar where grname ='SYSTEM' and varname ='NEXTDATE';
v_t_1_date:=get_t_date(v_currdate,1);
v_t_2_date:=get_t_date(v_currdate,2);
v_t_3_date:=get_t_date(v_currdate,3);

plog.error(pkgctx, 'Lenh mua ');

FOR REC IN
(
select substr(af.acctno,1,4)|| substr(txdate,1,2)||substr(txdate,4,2)||substr(txdate,9)||lpad(seq_Cv_orderid.nextval,6,'0') orderid ,
af.acctno,  nvl(to_number(sts.matchprice),0) order_price,  nvl(to_number(sts.matchqtty),0) order_qtty , nvl(to_number(sts.matchqtty*sts.matchprice),0)amt, nvl(to_number(sts.matchqtty),0) trans_qtty,To_DATE(txdate,'DD/MM/YYYY') trans_date,
sb.codeid ,3 clearcd,  2  clearcdSM,sts.FEEACR, 'N'norp, getduedate(to_date(txdate,'dd/mm/yyyy') ,'B','001',3) clearday,CF.CUSTODYCD,SB.SYMBOL,DECODE( STS.EXECTYPE,'NB','B','S')  BORS
from stschdcv sts , cfmast cf, afmast af,sbsecurities sb
where sts.custodycd =af.description
and cf.custid = af.custid
and sb.symbol = sts.symbol AND STS.EXECTYPE='NB'

)
LOOP
--select * from odmast

INSERT INTO ODMAST
(ACTYPE,ORDERID,CODEID,AFACCTNO,SEACCTNO,CIACCTNO,TXNUM,TXDATE,TXTIME,EXPDATE,BRATIO,TIMETYPE,EXECTYPE,NORK,MATCHTYPE,VIA,CLEARDAY,CLEARCD,ORSTATUS,PRICETYPE,QUOTEPRICE,STOPPRICE,LIMITPRICE,ORDERQTTY,REMAINQTTY,EXECQTTY,STANDQTTY,CANCELQTTY,ADJUSTQTTY,REJECTQTTY,REJECTCD,CUSTID,EXPRICE,EXQTTY,ICCFCD,ICCFTIED,EXECAMT,EXAMT,FEEAMT,CONSULTANT,VOUCHER,ODTYPE,FEEACR,PORSTATUS,RLSSECURED,SECUREDAMT,MATCHAMT,DELTD,REFORDERID,BANKTRFAMT,BANKTRFFEE,EDSTATUS,CORRECTIONNUMBER,CONTRAFIRM,TRADERID,CLIENTID,CONFIRM_NO,FOACCTNO,HOSESESSION,CONTRAORDERID,PUTTYPE,CONTRAFRM,DFACCTNO)
VALUES
('0001',rec.orderid,REC.CODEid,REC.ACCTNO,REC.ACCTNO||REC.CODEid,REC.ACCTNO,'0001000002',REC.trans_date,'17:04:45',REC.trans_date,'100.3','T','NB','N',REC.NORP,'F',rec.clearcd,'B','4','LO',REC.order_price,0,0,REC.order_qtty,0,rec.trans_qtty,0,0,0,0,'001','0000',rec.order_price,rec.trans_qtty,NULL,NULL,rec.amt,0,REC.FEEACR,'I','C',0,REC.FEEACR,'92',0,0,rec.amt,'N',NULL,0,0,'N',0,NULL,NULL,NULL,0,NULL,NULL,NULL,'O',NULL,NULL);

INSERT INTO STSCHD
(AUTOID,DUETYPE,ACCTNO,REFORDERID,TXDATE,CLEARDAY,CLEARCD,AMT,AAMT,QTTY,AQTTY,FAMT,AFACCTNO,STATUS,DELTD,TXNUM,ORGORDERID,CODEID,PAIDAMT,PAIDFEEAMT,COSTPRICE,cleardate)
VALUES
(SEQ_STSCHD.NEXTVAL,'RS',rec.ACCTNO||rec.CODEID,'',REC.trans_date,rec.clearcd,'B',rec.amt,0,rec.trans_qtty,0,0,rec.acctno,'N','N','0001999999',rec.orderid,rec.codeid,0,0,0,REC.clearday);

INSERT INTO iodhist (ORGORDERID,EXORDERID,CODEID,SYMBOL,CUSTODYCD,BORS,NORP,AORN,PRICE,QTTY,REFCUSTCD,MATCHPRICE,MATCHQTTY,TXNUM,TXDATE,DELTD,CONFIRM_NO,TXTIME)
VALUES(rec.orderid,NULL,REC.CODEid,REC.SYMBOL,REC.CUSTODYCD,REC.BORS,REC.norp,'N',REC.order_price,REC.order_qtty,NULL,REC.order_price,REC.order_qtty,'0001000007',REC.trans_date,'N',NULL,'21:31:04');

INSERT INTO STSCHD
(AUTOID,DUETYPE,ACCTNO,REFORDERID,TXDATE,CLEARDAY,CLEARCD,AMT,AAMT,QTTY,AQTTY,FAMT,AFACCTNO,STATUS,DELTD,TXNUM,ORGORDERID,CODEID,PAIDAMT,PAIDFEEAMT,COSTPRICE,CLEARDATE)
VALUES
(SEQ_STSCHD.NEXTVAL,'SM',rec.ACCTNO,'',REC.trans_date, rec.clearcdSM,'B',rec.amt,0,rec.trans_qtty,0,0,rec.acctno,'C','N','0001999999',rec.orderid,rec.codeid,0,0,0,REC.trans_date);
END LOOP;

COMMIT;
-- LENH ban
plog.error(pkgctx, 'Lenh ban');
FOR REC IN
(
select substr(af.acctno,1,4)|| substr(txdate,1,2)||substr(txdate,4,2)||substr(txdate,9)||lpad(seq_Cv_orderid.nextval,6,'0') orderid ,
af.acctno,  nvl(to_number(sts.matchprice),0) order_price,  nvl(to_number(sts.matchqtty),0) order_qtty , nvl(to_number(sts.matchqtty*sts.matchprice),0)amt, nvl(to_number(sts.matchqtty),0) trans_qtty,To_DATE(txdate,'DD/MM/YYYY') trans_date,
sb.codeid ,3 clearcd,  2  clearcdSM,sts.FEEACR, 'N' norp, getduedate(to_date(txdate,'dd/mm/yyyy') ,'B','001',3) clearday,CF.CUSTODYCD,SB.SYMBOL,DECODE( STS.EXECTYPE,'NB','B','S')  BORS
from stschdcv sts , cfmast cf, afmast af,sbsecurities sb
where sts.custodycd =af.description
and cf.custid = af.custid
and sb.symbol = sts.symbol AND STS.EXECTYPE='NS'
)
LOOP

INSERT INTO ODMAST
(ACTYPE,ORDERID,CODEID,AFACCTNO,SEACCTNO,CIACCTNO,TXNUM,TXDATE,TXTIME,EXPDATE,BRATIO,TIMETYPE,EXECTYPE,NORK,MATCHTYPE,VIA,CLEARDAY,CLEARCD,ORSTATUS,PRICETYPE,QUOTEPRICE,STOPPRICE,LIMITPRICE,ORDERQTTY,REMAINQTTY,EXECQTTY,STANDQTTY,CANCELQTTY,ADJUSTQTTY,REJECTQTTY,REJECTCD,CUSTID,EXPRICE,EXQTTY,ICCFCD,ICCFTIED,EXECAMT,EXAMT,FEEAMT,CONSULTANT,VOUCHER,ODTYPE,FEEACR,PORSTATUS,RLSSECURED,SECUREDAMT,MATCHAMT,DELTD,REFORDERID,BANKTRFAMT,BANKTRFFEE,EDSTATUS,CORRECTIONNUMBER,CONTRAFIRM,TRADERID,CLIENTID,CONFIRM_NO,FOACCTNO,HOSESESSION,CONTRAORDERID,PUTTYPE,CONTRAFRM,DFACCTNO)
VALUES
('0001',rec.orderid,REC.CODEid,REC.ACCTNO,REC.ACCTNO||REC.CODEid,REC.ACCTNO,'0001000002',REC.trans_date,'17:04:45',REC.trans_date,'100.3','T','NS','N',REC.NORP,'F',rec.clearcd,'B','4','LO',REC.order_price,0,0,REC.order_qtty,0,rec.trans_qtty,0,0,0,0,'001','0000',rec.order_price,rec.trans_qtty,NULL,NULL,rec.amt,0,0,'I','C',0,REC.FEEACR,'92',0,0,rec.amt,'N',NULL,0,0,'N',0,NULL,NULL,NULL,0,NULL,NULL,NULL,'O',NULL,NULL);


INSERT INTO STSCHD
(AUTOID,DUETYPE,ACCTNO,REFORDERID,TXDATE,CLEARDAY,CLEARCD,AMT,AAMT,QTTY,AQTTY,FAMT,AFACCTNO,STATUS,DELTD,TXNUM,ORGORDERID,CODEID,PAIDAMT,PAIDFEEAMT,COSTPRICE,cleardate)
VALUES
(SEQ_STSCHD.NEXTVAL,'RM',rec.ACCTNO,'',REC.trans_date,rec.clearcd,'B',rec.amt,0,rec.trans_qtty,0,0,rec.acctno,'N','N','0001000002',rec.orderid,rec.codeid,0,0,0,REC.clearday);

INSERT INTO IODHIST (ORGORDERID,EXORDERID,CODEID,SYMBOL,CUSTODYCD,BORS,NORP,AORN,PRICE,QTTY,REFCUSTCD,MATCHPRICE,MATCHQTTY,TXNUM,TXDATE,DELTD,CONFIRM_NO,TXTIME)
VALUES(rec.orderid,NULL,REC.CODEid,REC.SYMBOL,REC.CUSTODYCD,REC.BORS,REC.norp,'N',REC.order_price,REC.order_qtty,NULL,REC.order_price,REC.order_qtty,'0001000007',REC.trans_date,'N',NULL,'21:31:04');

INSERT INTO stschd (AUTOID,DUETYPE,ACCTNO,REFORDERID,TXDATE,CLEARDAY,CLEARCD,AMT,AAMT,QTTY,AQTTY,FAMT,AFACCTNO,STATUS,DELTD,TXNUM,ORGORDERID,CODEID,PAIDAMT,PAIDFEEAMT,COSTPRICE,CLEARDATE,RIGHTQTTY,ARIGHT,TRFBUYDT,TRFBUYSTS,TRFEXEAMT,TRFBUYRATE,TRFBUYEXT,DFAMT,TRFT0AMT)
VALUES(SEQ_STSCHD.NEXTVAL,'SS',rec.ACCTNO||rec.CODEID,NULL,REC.trans_date,0,'B',rec.amt,0,rec.trans_qtty,0,0,rec.ACCTNO,'C','N','0001000033',rec.orderid,rec.codeid,0,0,0,REC.trans_date,0,0,NULL,'N',0,0,0,0,0);

END LOOP;


UPDATE ODMAST  SET  taxsellamt = matchamt*0.001 WHERE  exectype='NS';

UPDATE ODMAST SET ACTYPE ='0003';


COMMIT;

    plog.error(pkgctx, 'End Convert_ODMAST');
  exception
    when others then
      plog.error(pkgctx, sqlerrm);
      plog.setEndSection(pkgctx, 'Convert_ODMAST');
  end;



procedure Convert_ADSCHD is

v_currdate date;
v_prevdate date;
v_nextdate date;
v_t_1_date date;
v_t_2_date date;
v_t_3_date date;
v_dblamt number(20,4);
v_acctno varchar2(50);

begin

 plog.error(pkgctx, 'Begin Convert_ADSCHD');

select to_date(varvalue,'DD/MM/RRRR') into v_currdate from sysvar where grname ='SYSTEM' and varname ='CURRDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_prevdate from sysvar where grname ='SYSTEM' and varname ='PREVDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_nextdate from sysvar where grname ='SYSTEM' and varname ='NEXTDATE';
v_t_1_date:=get_t_date(v_currdate,1);
v_t_2_date:=get_t_date(v_currdate,2);
v_t_3_date:=get_t_date(v_currdate,3);


begin
for rec in (
select af.acctno, ads.amt +ads.fee amt, to_date (SUBSTR(txdate,1,10),'dd/mm/yyyy') txdate,  to_date (SUBSTR(clearday,1,10),'dd/mm/yyyy') clearday,ads.fee
from adschdcv ads,  afmast af
where ads.custodycd = af.description

  )
loop
insert into adschd (AUTOID, ISMORTAGE, STATUS, DELTD, ACCTNO, TXDATE, TXNUM, REFADNO, CLEARDT, AMT, FEEAMT, VATAMT, BANKFEE, PAIDAMT)
values (seq_adschd.nextval , '0', 'N', 'N', rec.acctno, rec.txdate, '9900000673', '', rec.clearday , rec.amt, 0, 0.0000, 0.0000,0);
end loop ;
end ;


UPDATE STSCHD SET AAMT =0 ;


for rec in
(

SELECT  sum (amt+fee)   BALANCE, sum(fee), to_date(SUBSTR(clearday,1,10),'DD/MM/YYYY') clearday ,af.acctno
FROM adschdcv ads, AFMAST AF where ads.custodycd = AF.DESCRIPTION
and   to_date(SUBSTR(clearday,1,10),'DD/MM/YYYY')>= v_currdate
group by clearday ,af.acctno

)
loop
     v_dblamt := rec.balance;
     v_acctno := rec.acctno;
     for rec_sts in
     (
        select autoid,amt-aamt-famt amt from stschd where duetype ='RM' and amt-aamt-famt>0
        and afacctno = rec.acctno  and cleardate=rec.clearday

     )
     loop
        if   v_dblamt > rec_sts.amt then
            update stschd set aamt = aamt+rec_sts.amt where autoid = rec_sts.autoid;
            v_dblamt:=v_dblamt-rec_sts.amt;
        else
            update stschd set aamt = aamt+ v_dblamt where autoid = rec_sts.autoid;
            v_dblamt:=0;
        end if;
        exit when v_dblamt<=0;
     end loop;
end loop;

UPDATE CIMAST SET  AAMT =0 ;

begin
for rec  in
( select  sum (aamt) aamt ,afacctno from stschd where aamt >0 group by afacctno  )
loop
update cimast set aamt = aamt + rec.aamt where acctno = rec.afacctno ;
end loop;
end;


plog.error(pkgctx, 'End Convert_ADSCHD');
  exception
    when others then
      plog.error(pkgctx, sqlerrm);
      plog.setEndSection(pkgctx, 'Convert_CFMAST');
  end;





procedure Convert_CFOTHERACC is

v_currdate date;
v_prevdate date;
v_nextdate date;
v_t_1_date date;
v_t_2_date date;
v_t_3_date date;

begin

plog.error(pkgctx, 'Begin Convert_CFOTHERACC');

select to_date(varvalue,'DD/MM/RRRR') into v_currdate from sysvar where grname ='SYSTEM' and varname ='CURRDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_prevdate from sysvar where grname ='SYSTEM' and varname ='PREVDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_nextdate from sysvar where grname ='SYSTEM' and varname ='NEXTDATE';
v_t_1_date:=get_t_date(v_currdate,1);
v_t_2_date:=get_t_date(v_currdate,2);
v_t_3_date:=get_t_date(v_currdate,3);
begin
for rec in (

 select af.acctno, cfo.bankacc, cfo.bankacname, cfo.BANKNAME ,cfo.cityef,cfo.citybank,cfo.ACNIDCODE,
TO_DATE(CASE WHEN LENGTH( cfo.ACNIDDATE)=1 THEN '01-JAN-2000' ELSE cfo.ACNIDDATE END,'DD/MM/YYYY')   ACNIDDATE,cfo.ACNIDPLACE,cfo.bankcode
from cfotheracccv cfo, cfmast cf , afmast af where cfo.custodycd = Af.DESCRIPTION and cf.custid =af.custid
and  cfo.bankacc NOT LIKE '091%'
  )
loop
INSERT INTO cfotheracc (AUTOID,AFACCTNO,CIACCOUNT,CINAME,CUSTID,BANKACC,BANKACNAME,BANKNAME,TYPE,ACNIDCODE,ACNIDDATE,ACNIDPLACE,FEECD,cityef,citybank,bankid)
VALUES(seq_cfotheracc.nextval ,rec.acctno ,NULL,NULL,NULL,rec.bankacc,rec.bankacname,rec.BANKNAME,'1',REC.ACNIDCODE,REC.ACNIDDATE,REC.ACNIDPLACE,NULL,REC.cityef,REC.citybank,rec.bankcode);
end loop;
end ;


for rec in (


  select af.acctno, cfo.bankacc,afci.acctno ciacctno , cf.fullname,
TO_DATE(CASE WHEN LENGTH( cfo.ACNIDDATE)=1 THEN '01-JAN-2000' ELSE cfo.ACNIDDATE END,'DD/MM/YYYY')   ACNIDDATE,cfo.ACNIDPLACE,cfo.bankcode
from cfotheracccv cfo,  afmast af , afmast afci,cfmast cf
where cfo.custodycd = af.description and cfo.bankacc =afci.description and afci.custid = cf.custid
 and cfo.bankacc LIKE '091%'
  )
loop

INSERT INTO cfotheracc (AUTOID,AFACCTNO,CIACCOUNT,CINAME,CUSTID,BANKACC,BANKACNAME,BANKNAME,TYPE,ACNIDCODE,ACNIDDATE,ACNIDPLACE,FEECD,CITYEF,CITYBANK,VIA,USERNAME,TLID,CREATEDATE,BANKID,BANKORGNO)
VALUES(seq_cfotheracc.nextval,rec.acctno,rec.ciacctno,rec.fullname,NULL,NULL,NULL,NULL,'0',NULL,TO_DATE('3/04/2003','DD/MM/RRRR'),NULL,NULL,NULL,NULL,'F','ADMIN','0001',TO_DATE('26/03/2013','DD/MM/RRRR'),rec.bankcode,NULL);

end loop;

COMMIT;


plog.error(pkgctx, 'End Convert_CFOTHERACC');

  exception
    when others then
      plog.error(pkgctx, sqlerrm);
      plog.setEndSection(pkgctx, 'Convert_CFOTHERACC');
  end;



procedure Convert_LNMAST is

v_currdate date;
v_prevdate date;
v_nextdate date;
v_t_1_date date;
v_t_2_date date;
v_t_3_date date;

begin

plog.error(pkgctx, 'Begin Convert_LNMAST');
select to_date(varvalue,'DD/MM/RRRR') into v_currdate from sysvar where grname ='SYSTEM' and varname ='CURRDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_prevdate from sysvar where grname ='SYSTEM' and varname ='PREVDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_nextdate from sysvar where grname ='SYSTEM' and varname ='NEXTDATE';
v_t_1_date:=get_t_date(v_currdate,1);
v_t_2_date:=get_t_date(v_currdate,2);
v_t_3_date:=get_t_date(v_currdate,3);


FOR REC IN (
select a.*,
SUBSTR(a.ACCTNO,1,4)|| LPAD(seq_CVtxnum.NEXTVAL,6,'0')  TXNUM ,
substr(a.acctno,1,4)||TO_CHAR(to_date(a.txDATE,'DD/MM/YYYY'),'DDMMYY')||lpad(seq_lnmast.NEXTVAL,6,0) acctnoln
from (
select
SUM(intnmlacr) intnmlacr,SUM(nml) nml ,AF.acctno,ma.actype ,SUM(intovdacr) intovdacr , min(txdate) txdate FROM MAGINCV ma, afmast af, cfmast cf
where ma.custodycd = af.description and af.custid = cf.custid
GROUP BY AF.acctno,ma.actype)a
)
LOOP

insert into LNMAST (ACTYPE, ACCTNO, CCYCD, BANKID, APPLID, OPNDATE, EXPDATE, EXTDATE, CLSDATE, RLSDATE, LASTDATE, ACRDATE, OACRDATE, STATUS, PSTATUS, TRFACCTNO, PRINAFT, INTAFT, LNTYPE, LNCLDR, PRINFRQ, PRINPERIOD, INTFRGCD, INTDAY, INTPERIOD, NINTCD, OINTCD, RATE1, RATE2, RATE3, OPRINFRQ, OPRINPERIOD, OINTFRQCD, OINTDAY, ORATE1, ORATE2, ORATE3, DRATE, APRLIMIT, RLSAMT, PRINPAID, PRINNML, PRINOVD, INTNMLACR, INTOVDACR, INTNMLPBL, INTNMLOVD, INTDUE, INTPAID, INTPREPAID, NOTES, LNCLASS, ADVPAY, ADVPAYFEE, ORLSAMT, OPRINPAID, OPRINNML, OPRINOVD, OINTNMLACR, OINTNMLOVD, OINTOVDACR, OINTDUE, OINTPAID, OINTPREPAID, FEE, FEEPAID, FEEDUE, FEEOVD, FEEPAID2, FTYPE, LAST_CHANGE, PRINTFRQ1, PRINTFRQ2, PRINTFRQ3, INDUERATIO, OVERDUERATIO, RRTYPE, CUSTBANK, CIACCTNO, AUTOADVPAY, CFRATE1, CFRATE2, CFRATE3, MINTERM, PREPAID, INTPAIDMETHOD, AUTOAPPLY, FEEINTNMLACR, FEEINTOVDACR, FEEINTNMLOVD, FEEINTDUE, FEEINTPREPAID, FEEINTPAID, INTFLOATAMT, FEEFLOATAMT, INTOVDCD, BANKPAIDMETHOD)
values (rec.actype, rec.acctnoln, '00', '', '', to_date(rec.txdate, 'dd-mm-yyyy'), to_date(rec.txdate, 'dd-mm-yyyy'), null, null, to_date(rec.txdate, 'dd-mm-yyyy'), null, to_date('17-04-2013', 'dd-mm-yyyy'), to_date(rec.txdate, 'dd-mm-yyyy'), 'N', '', rec.acctno, 'Y', 'Y', 'T', 'N', 0, 90, 'L', 1, 0, '000', '000', 17.0000, 17.0000, 24.0000, 0, 0, 'L', 1, 0.0000, 0.0000, 0.0000, 'Y1', 0.00, rec.nml, 0.0000, rec.nml, 0.0000, rec.intnmlacr, 0.0000, 0.0000, 0.0000, 0.0000, 0, 0.0000, '', 'I', 'N', 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 'AF', '22-MAR-13 04.41.34.826000 PM', 0, 0, 0, 0.00000000, 0.00000000, 'C', '', '', 'N', 0.0000, 0.0000, 0.0000, 0.0000, 'Y', 'I', 'L', 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 'N', 'I');

END LOOP;


commit;

FOR REC IN (
SELECT ma.intnmlacr , ma.nml , ma.ovdacrdate , AF.acctno,ma.txdate ,ln.acctno acctnoln
FROM MAGINCV ma, lnmast ln , afmast af
where ma.custodycd = af.description and ln.trfacctno = af.acctno
--AND TO_DATE (ovdacrdate,'DD/MM/YYYY')> '27-MAR-2013'
)
LOOP

insert into LNSCHD (AUTOID, ACCTNO, DUENO, RLSDATE, DUEDATE, OVERDUEDATE, ACRDATE, OVDACRDATE, PAIDDATE, REFTYPE, NML, OVD, PAID, DUESTS, PDUESTS, INTNMLACR, FEE, DUE, INTOVDDUEDATE, INTDUE, INTOVD, INTOVDPRIN, INTPAID, FEEDUE, FEEOVD, FEEPAID, FEEPAID2, RATE1, RATE2, RATE3, CFRATE1, CFRATE2, CFRATE3, FEEINTNMLACR, FEEINTOVDACR, FEEINTNMLOVD, FEEINTDUE, FEEINTPREPAID, FEEINTPAID, NMLFEEINT, OVDFEEINT, PAIDFEEINT, FEEINTNML, FEEINTOVD, REFAUTOID)
values (SEQ_LNSCHD.NEXTVAL, rec.acctnoln, '0', to_date(rec.txdate, 'dd-mm-yyyy'), to_date(rec.txdate, 'dd-mm-yyyy'), to_date(REC.ovdacrdate, 'dd-mm-yyyy'), v_currdate, to_date(rec.txdate, 'dd-mm-yyyy'), null, 'P', rec.nml, 0.0000, 0.0000, 'N', '', rec.intnmlacr, 0.0000, 'N', null, 0.0000, 0.0000, 0.0000, 0, 0.0000, 0.0000, 0.0000, 0.0000, 16.0000, 16.0000, 24.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0);

END LOOP;


COMMIT;

FOR REC IN (
SELECT SUM( NVL(prinnml,0) + NVL(prinovd,0)+ NVL(intnmlacr,0)+ NVL(intovdacr,0)+ NVL(intnmlovd,0)+ NVL(intdue,0) ) AMT , TRFACCTNO
FROM LNMAST
 WHERE  NVL(prinnml,0) + NVL(prinovd,0)+ NVL(intnmlacr,0)+ NVL(intovdacr,0)+ NVL(intnmlovd,0)+ NVL(intdue,0)  >0
 GROUP BY TRFACCTNO
)
LOOP
UPDATE CIMAST SET ODAMT =ODAMT+ REC.AMT WHERE ACCTNO = REC.TRFACCTNO ;
END LOOP;


for rec in
   (
SELECT lnmast.acctno , LNTYPE.RATE1, LNTYPE.RATE2, LNTYPE.RATE3,LNTYPE.cfrate1,LNTYPE.cfrate2, LNTYPE.cfrate3 ,
LNMAST.feeintnmlacr,LNMAST.feeintovdacr,LNMAST.feeintnmlovd,LNTYPE.prinfrq
FROM LNTYPE , lnmast
where lntype.actype = lnmast.actype
)
loop
update lnmast set rate1= rec.RATE1,RATE2= rec.RATE2, RATE3 =rec.RATE3,
  cfrate1 = rec.cfrate1 ,cfrate2= rec.cfrate2, cfrate3=rec.cfrate3 ,prinfrq = REC.prinfrq where acctno = rec.acctno;

update lnschd set rate1= rec.RATE1,RATE2= rec.RATE2, RATE3 =rec.RATE3,
  cfrate1 = rec.cfrate1 ,cfrate2= rec.cfrate2, cfrate3=rec.cfrate3,
 feeintnmlacr= REC.feeintnmlacr,feeintovdacr=REC.feeintovdacr,feeintnmlovd=REC.feeintnmlovd--,prinfrq = REC.prinfrq
 where acctno = rec.acctno;
end loop;
UPDATE LNMAST  SET prepaid ='N';
COMMIT;

plog.error(pkgctx, 'End Convert_LNMAST');


  exception
    when others then
      plog.error(pkgctx, sqlerrm);
      plog.setEndSection(pkgctx, 'Convert_LNMAST');
  end;


procedure Convert_USERLOGIN is

v_currdate date;
v_prevdate date;
v_nextdate date;
v_t_1_date date;
v_t_2_date date;
v_t_3_date date;

begin

plog.error(pkgctx, 'Begin Convert_USERLOGIN');

select to_date(varvalue,'DD/MM/RRRR') into v_currdate from sysvar where grname ='SYSTEM' and varname ='CURRDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_prevdate from sysvar where grname ='SYSTEM' and varname ='PREVDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_nextdate from sysvar where grname ='SYSTEM' and varname ='NEXTDATE';
v_t_1_date:=get_t_date(v_currdate,1);
v_t_2_date:=get_t_date(v_currdate,2);
v_t_3_date:=get_t_date(v_currdate,3);


DELETE otright;
DELETE otrightDTL;
BEGIN
FOR REC IN (

SELECT  AF.ACCTNO,CF.CUSTID FROM AFMAST AF,CFMAST CF where AF.status ='A'
AND AF.CUSTID=CF.CUSTID

)
LOOP
INSERT INTO OTRIGHT (AUTOID,AFACCTNO,AUTHCUSTID,AUTHTYPE,VALDATE,EXPDATE,DELTD,LASTDATE,LASTCHANGE)
VALUES(seq_otright.NEXTVAL,REC.ACCTNO,REC.CUSTID,'0',TO_DATE('25/03/2000','DD/MM/RRRR'),TO_DATE('25/03/2033','DD/MM/RRRR'),'N',NULL,TO_DATE('25/03/2013','DD/MM/RRRR'));

INSERT INTO OTRIGHTDTL (AUTOID,AFACCTNO,AUTHCUSTID,OTMNCODE,OTRIGHT,DELTD)
VALUES(seq_otrightdtl.NEXTVAL,REC.ACCTNO,REC.CUSTID,'CASHTRANS','YYYYNY','N');
INSERT INTO OTRIGHTDTL (AUTOID,AFACCTNO,AUTHCUSTID,OTMNCODE,OTRIGHT,DELTD)
VALUES(seq_otrightdtl.NEXTVAL,REC.ACCTNO,REC.CUSTID,'ADWINPUT','YYYYNY','N');
INSERT INTO OTRIGHTDTL (AUTOID,AFACCTNO,AUTHCUSTID,OTMNCODE,OTRIGHT,DELTD)
VALUES(seq_otrightdtl.NEXTVAL,REC.ACCTNO,REC.CUSTID,'ISSUEINPUT','YYYYNY','N');
INSERT INTO OTRIGHTDTL (AUTOID,AFACCTNO,AUTHCUSTID,OTMNCODE,OTRIGHT,DELTD)
VALUES(seq_otrightdtl.NEXTVAL,REC.ACCTNO,REC.CUSTID,'ORDINPUT','YYYYYN','N');
INSERT INTO OTRIGHTDTL (AUTOID,AFACCTNO,AUTHCUSTID,OTMNCODE,OTRIGHT,DELTD)
VALUES(seq_otrightdtl.NEXTVAL,REC.ACCTNO,REC.CUSTID,'COND_ORDER','YYYYYN','N');
INSERT INTO OTRIGHTDTL (AUTOID,AFACCTNO,AUTHCUSTID,OTMNCODE,OTRIGHT,DELTD)
VALUES(seq_otrightdtl.NEXTVAL,REC.ACCTNO,REC.CUSTID,'GROUP_ORDER','YYYYYN','N');
INSERT INTO OTRIGHTDTL (AUTOID,AFACCTNO,AUTHCUSTID,OTMNCODE,OTRIGHT,DELTD)
VALUES(seq_otrightdtl.NEXTVAL,REC.ACCTNO,REC.CUSTID,'DEPOSIT','YYYYNN','N');
INSERT INTO OTRIGHTDTL (AUTOID,AFACCTNO,AUTHCUSTID,OTMNCODE,OTRIGHT,DELTD)
VALUES(seq_otrightdtl.NEXTVAL,REC.ACCTNO,REC.CUSTID,'SMARTALERT','YYYYNN','N');
INSERT INTO OTRIGHTDTL (AUTOID,AFACCTNO,AUTHCUSTID,OTMNCODE,OTRIGHT,DELTD)
VALUES(seq_otrightdtl.NEXTVAL,REC.ACCTNO,REC.CUSTID,'MARKETALERT','YYYYNN','N');
INSERT INTO OTRIGHTDTL (AUTOID,AFACCTNO,AUTHCUSTID,OTMNCODE,OTRIGHT,DELTD)
VALUES(seq_otrightdtl.NEXTVAL,REC.ACCTNO,REC.CUSTID,'COMPANYALERT','YYYYNN','N');
INSERT INTO OTRIGHTDTL (AUTOID,AFACCTNO,AUTHCUSTID,OTMNCODE,OTRIGHT,DELTD)
VALUES(seq_otrightdtl.NEXTVAL,REC.ACCTNO,REC.CUSTID,'BONDSTOSHARES','YYYYNY','N');
INSERT INTO OTRIGHTDTL (AUTOID,AFACCTNO,AUTHCUSTID,OTMNCODE,OTRIGHT,DELTD)
VALUES(seq_otrightdtl.NEXTVAL,REC.ACCTNO,REC.CUSTID,'ADMINMESSAGES','YYYYNN','N');
END LOOP;
END ;
COMMIT;

INSERT INTO  shauserlogin
SELECT SUBSTR(custodycd,1,10),passwordtrade,passwordsald FROM  passwordcv where SUBSTR(custodycd,11,1)<>'M' and  instr(custodycd,'Administra')=0 ;


BEGIN
FOR REC IN (
SELECT SUBSTR(PA.custodycd,1,10) USERNAME  , '{MSBS{SMS{'||NVL(SMS.mobilesms,'SDT')||'}}}' mobilesms
FROM  passwordcv PA ,SMSCV SMS
where SUBSTR(PA.custodycd,1,10)= SMS.custodycd(+)
AND SUBSTR(PA.custodycd,11,1)<>'M' and  instr(PA.custodycd,'Administra')=0
AND LENGTH(NVL(SMS.mobilesms,'0'))<14
)
LOOP
INSERT INTO USERLOGIN (USERNAME,HANDPHONE,LOGINPWD,TRADINGPWD,AUTHTYPE,STATUS,LOGINSTATUS,LASTCHANGED,NUMBEROFDAY,LASTLOGIN,ISRESET,ISMASTER,TOKENID)
VALUES(REC.USERNAME,NULL,'','','N','A','O',TO_DATE('25/03/2013','DD/MM/RRRR'),30,TO_DATE('25/03/2013','DD/MM/RRRR'),'N','N',REC.mobilesms);
END LOOP;
END;


plog.error(pkgctx, 'End Convert_USERLOGIN');
  exception
    when others then
      plog.error(pkgctx, sqlerrm);
      plog.setEndSection(pkgctx, 'Convert_USERLOGIN');
  end;



procedure Convert_pool_room is

v_currdate date;
v_prevdate date;
v_nextdate date;
v_t_1_date date;
v_t_2_date date;
v_t_3_date date;
l_dorc varchar2(100);
p_err_code varchar2(200);
begin

plog.error(pkgctx, 'Begin Convert_pool_room');

select to_date(varvalue,'DD/MM/RRRR') into v_currdate from sysvar where grname ='SYSTEM' and varname ='CURRDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_prevdate from sysvar where grname ='SYSTEM' and varname ='PREVDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_nextdate from sysvar where grname ='SYSTEM' and varname ='NEXTDATE';
v_t_1_date:=get_t_date(v_currdate,1);
v_t_2_date:=get_t_date(v_currdate,2);
v_t_3_date:=get_t_date(v_currdate,3);



l_dorc:='D';

for rec_0 in
(
select af.acctno, af.actype, substr(af.acctno,1,4) brid, sum(prinnml+prinovd) dfprin
from lnmast ln, afmast af
where ln.trfacctno = af.acctno and ln.ftype = 'AF'
group by af.acctno, af.actype
)
loop
update cimast set dfodamt = rec_0.dfprin
where acctno = rec_0.acctno;


        FOR rec IN
        (
            SELECT DISTINCT pm.prcode, pm.prname, pm.prtyp, pm.codeid, pm.prlimit,
                    pm.prinused, pm.expireddt, pm.prstatus
            FROM prmaster pm, prtype prt, prtypemap prtm, typeidmap tpm, bridmap brm
            WHERE pm.prcode = brm.prcode
                AND pm.prcode = prtm.prcode
                AND prt.actype = prtm.prtype
                AND prt.actype = tpm.prtype
                AND pm.codeid = decode('P','R','00',pm.codeid)
                AND pm.prtyp = 'P'
              --  AND prt.TYPE = 'AFTYPE'
                AND pm.prstatus = 'A'
                AND tpm.typeid = decode(tpm.typeid,'ALL',tpm.typeid,rec_0.actype)
                AND brm.brid = decode(brm.brid,'ALL',brm.brid,rec_0.brid)
        )
        LOOP
            UPDATE PRMASTER SET PRINUSED=PRINUSED+ rec_0.dfprin WHERE PRCODE= rec.prcode;

            INSERT INTO PRTRAN(TXNUM,TXDATE,ACCTNO,TXCD,NAMT,CAMT,DELTD,REF,AUTOID,TLTXCD,BKDATE,TRDESC)
                    VALUES ('9999000001', TO_DATE ('01/04/2012', 'DD/MM/RRRR'),rec.prcode,'0004',rec_0.dfprin,NULL,'N','',seq_PRTRAN.NEXTVAL,'2674',
                    TO_DATE ('01/04/2012', 'DD/MM/RRRR'),'' || 'Giai Ngan DF' || '');


        END LOOP;
end loop;



begin
for rec in (select distinct trfacctno  CIACCTNO from lnmast )
loop

if fn_markedafpralloc(rec.CIACCTNO,
                        null,
                        'A',
                        'M',
                        null,
                        'N',
                        'N',
                        v_CURRDATE,
                        null,
                        p_err_code) <> systemnums.C_SUCCESS then

     plog.debug (pkgctx, 'got error fn_markedafpralloc inside pr_LNAutoDrawndown: ' || p_err_code );
       ROLLBACK;
            RETURN;
        end if;
end loop ;
end ;

plog.error(pkgctx, 'End Convert_pool_room');
  exception
    when others then
      plog.error(pkgctx, sqlerrm);
      plog.setEndSection(pkgctx, 'Convert_pool_room');
  end;


procedure Convert_depo is

v_currdate date;
v_prevdate date;
v_nextdate date;
v_t_1_date date;
v_t_2_date date;
v_t_3_date date;
l_dorc varchar2(100);
p_err_code varchar2(200);
begin

plog.error(pkgctx, 'Begin Convert_depo');

select to_date(varvalue,'DD/MM/RRRR') into v_currdate from sysvar where grname ='SYSTEM' and varname ='CURRDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_prevdate from sysvar where grname ='SYSTEM' and varname ='PREVDATE';
select to_date(varvalue,'DD/MM/RRRR') into v_nextdate from sysvar where grname ='SYSTEM' and varname ='NEXTDATE';
v_t_1_date:=get_t_date(v_currdate,1);
v_t_2_date:=get_t_date(v_currdate,2);
v_t_3_date:=get_t_date(v_currdate,3);

for rec in ( select af.acctno, de.depofeeamt
 from depofeeamtcv de , afmast af
 where de.custodycd= af.description)
 loop

 update cimast set depofeeamt = rec.depofeeamt where acctno = rec.acctno;
 end loop;

 for rec in ( select af.acctno, de.depointacr
 from depointacrcv de , afmast af
 where de.custodycd= af.description)
 loop

 update cimast  set cidepofeeacr = rec.depointacr where acctno = rec.acctno;
 end loop;

update   semast set tbaldt = v_currdate;

FOR  REC IN (SELECT * FROM CIMAST WHERE depofeeamt<>0)
LOOP

insert into CIFEESCHD (AUTOID, AFACCTNO, FEETYPE, TXNUM, TXDATE, NMLAMT, PAIDAMT, FLOATAMT, FRDATE, TODATE, REFACCTNO, DELTD, PAIDTXNUM, PAIDTXDATE)
values (seq_cifeeschd.NEXTVAL, REC.ACCTNO, 'VSDDEP', 'VSDDEP_DUE', to_date('29-03-2013', 'dd-mm-yyyy'), REC.depofeeamt, 0, 0.0000, to_date('01-02-2013', 'dd-mm-yyyy'), to_date('31-03-2013', 'dd-mm-yyyy'), '', 'N', '0001000016', to_date('19-03-2013', 'dd-mm-yyyy'));

END LOOP;


plog.error(pkgctx, 'End Convert_depo');
  exception
    when others then
      plog.error(pkgctx, sqlerrm);
      plog.setEndSection(pkgctx, 'Convert_depo');
  end;

procedure END_Convert is

v_currdate date;
v_prevdate date;
v_nextdate date;
v_t_1_date date;
v_t_2_date date;
v_t_3_date date;

BEGIN



   INSERT INTO citran_gen (AUTOID,CUSTODYCD,CUSTID,TXNUM,TXDATE,ACCTNO,TXCD,NAMT,CAMT,REF,DELTD,ACCTREF,TLTXCD,BUSDATE,TXDESC,TXTIME,BRID,TLID,OFFID,CHID,DFACCTNO,OLD_DFACCTNO,TXTYPE,FIELD,TLLOG_AUTOID,TRDESC)
    select ci.autoid, cf.custodycd, cf.custid,
        ci.txnum, ci.txdate, ci.acctno, ci.txcd, ci.namt,
        ci.camt, ci.ref, nvl(ci.deltd,'N') deltd, ci.acctref,
        tl.tltxcd, tl.busdate, tl.txdesc, tl.txtime, tl.brid, tl.tlid, tl.offid, tl.chid,
        case when tl.tltxcd in ('2670') then ci.ref else df.acctno end  dfacctno,
                       ''  old_dfacctno,
        app.txtype, app.field ,tl.autoid,ci.trdesc
    from citrana ci, tllogall tl, cfmast cf, afmast af, apptx app, (select nvl(max(acctno),groupid) acctno ,lnacctno from vw_dfmast_all group by GROUPid,lnacctno )df
    where ci.txdate = tl.txdate and ci.txnum = tl.txnum
        and cf.custid = af.custid
        and ci.acctno = af.acctno
        and ci.txcd = app.txcd and app.apptype = 'CI' and app.txtype in ('D','C')
        and ci.ref = df.lnacctno (+)
        and tl.deltd <> 'Y'
        and ci.namt <> 0
;

  INSERT INTO setran_gen (AUTOID,CUSTODYCD,CUSTID,TXNUM,TXDATE,ACCTNO,TXCD,NAMT,CAMT,REF,DELTD,ACCTREF,TLTXCD,BUSDATE,TXDESC,TXTIME,BRID,TLID,OFFID,CHID,AFACCTNO,SYMBOL,SECTYPE,TRADEPLACE,TXTYPE,FIELD,CODEID,TLLOG_AUTOID,TRDESC)
    select tr.autoid, cf.custodycd, cf.custid, tr.txnum, tr.txdate, tr.acctno, tr.txcd, tr.namt, tr.camt, tr.ref, tr.deltd, tr.acctref,
        tl.tltxcd, tl.busdate, tl.txdesc, tl.txtime, tl.brid, tl.tlid, tl.offid, tl.chid,
        se.afacctno, sb.symbol, sb.sectype, sb.tradeplace, ap.txtype, ap.field, sb.codeid ,tl.autoid,tr.trdesc
    from setrana tr, tllogall tl, sbsecurities sb, semast se, cfmast cf, apptx ap
    where tr.txdate = tl.txdate and tr.txnum = tl.txnum
        and tr.acctno = se.acctno
        and sb.codeid = se.codeid
        and se.custid = cf.custid
        and tr.txcd = ap.txcd and ap.apptype = 'SE' and ap.txtype in ('D','C')
        and tr.deltd <> 'Y' and tr.namt <> 0;
    commit;

    update  AFDFBASKET set autoid = seq_AFDFBASKET.nextval ;
update  AFIDTYPE set autoid = seq_AFIDTYPE.nextval ;
update  BRGRPPARAM set autoid = seq_BRGRPPARAM.nextval ;
update  BRIDTYPE set autoid = seq_BRIDTYPE.nextval ;
update  BUSTXLOG set autoid = seq_BUSTXLOG.nextval ;
update  CRBDEFACCT set autoid = seq_CRBDEFACCT.nextval ;
update  CRBDEFBANK set autoid = seq_CRBDEFBANK.nextval ;
update  DFBASKET set autoid = seq_DFBASKET.nextval ;
update  EMAILLOG set autoid = seq_EMAILLOG.nextval ;
update  FEEMAP set autoid = seq_FEEMAP.nextval ;
update  GLMAP set autoid = seq_GLMAP.nextval ;
update  ICCFTIER set autoid = seq_ICCFTIER.nextval ;
update  ICCFTYPEDEF set autoid = seq_ICCFTYPEDEF.nextval ;
update  ISSUER_MEMBER set autoid = seq_ISSUER_MEMBER.nextval ;
update  LNDD set autoid = seq_LNDD.nextval ;
--update  OTRIGHT set autoid = seq_OTRIGHT.nextval ;
--update  OTRIGHTDTL set autoid = seq_OTRIGHTDTL.nextval ;
update  PRTYPEMAP set autoid = seq_PRTYPEMAP.nextval ;
update  RECONCILE set autoid = seq_RECONCILE.nextval ;
update  REGTYPE set autoid = seq_REGTYPE.nextval ;
update  SBCLDR set autoid = seq_SBCLDR.nextval ;
update  SBFXRT set autoid = seq_SBFXRT.nextval ;
update  SECBASKET set autoid = seq_SECBASKET.nextval ;
--update  SECURITIES_INFO set autoid = seq_SECURITIES_INFO.nextval ;
update  SECURITIES_RATE set autoid = seq_SECURITIES_RATE.nextval ;
--update  SECURITIES_TICKSIZE set autoid = seq_SECURITIES_TICKSIZE.nextval ;
update  SMSMATCHED set autoid = seq_SMSMATCHED.nextval ;
update  STCSE set autoid = seq_STCSE.nextval ;
update  TLAUTH set autoid = seq_TLAUTH.nextval ;
update  TLGRPAFTYPE set autoid = seq_TLGRPAFTYPE.nextval ;
update  TLGRPUSERS set autoid = seq_TLGRPUSERS.nextval ;
update  TXDESC set autoid = seq_TXDESC.nextval ;
update  TYPEIDMAP set autoid = seq_TYPEIDMAP.nextval ;
COMMIT;


BEGIN
    pr_gencibufall();
END;

COMMIT;


BEGIN
    fopks_api.pr_gen_buf_od_account;
END;

COMMIT;


BEGIN
    fopks_api.pr_gen_buf_se_account;
END;

COMMIT;

  plog.error(pkgctx, 'END_Convert');
  exception
    when others then
      plog.error(pkgctx, sqlerrm);
      plog.setEndSection(pkgctx, 'END_Convert');
  end;




begin
  -- Initialization
  -- <Statement>;
  for i in (select * from tlogdebug) loop
    logrow.loglevel  := i.loglevel;
    logrow.log4table := i.log4table;
    logrow.log4alert := i.log4alert;
    logrow.log4trace := i.log4trace;
  end loop;

  pkgctx := plog.init('NMPKS_EMS',
                      plevel     => nvl(logrow.loglevel, 30),
                      plogtable  => (nvl(logrow.log4table, 'N') = 'Y'),
                      palert     => (nvl(logrow.log4alert, 'N') = 'Y'),
                      ptrace     => (nvl(logrow.log4trace, 'N') = 'Y'));
end pks_convert_flex;
/

